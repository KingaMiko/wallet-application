{"version":3,"file":"static/js/210.96e3ec38.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","utils/patterns.js","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Box/Box.module.scss?20ba","components/Box/Box.jsx","webpack://wallet-application/./src/components/Transactions/Transactions.module.scss?e1bb","components/Transactions/Transactions.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","redux/global/selectors.js","components/ModalAddTransaction/ModalAddTransaction.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        //do zrobienia pobieranie tokena\n        const authToken =\n          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NmY0NjRkMmJlOGRkZWQxYWY4MDhjNyIsIm5hbWUiOiJLaW5nYSIsImlhdCI6MTcwMTc5MTM0MiwiZXhwIjoxNzAxNzk0OTQyfQ.IYdeMehD9ZMqXjBY2nl8Wu4jQBbOq1F86hjCgTzBKXs';\n        const response = await axios.get(\n          'http://localhost:3000/api/currencies',\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"error-message\":\"RegistrationForm_error-message__xXzPo\",\"box\":\"RegistrationForm_box__y2CqE\"};","export const namePattern = /^[a-zA-ZąćęłńóśżźĄĆĘŁŃÓŚŻŹ]+$/;\nexport const passwordPattern =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+=[\\]{}'\"\\\\|,.<>/?~])/;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/session/operations';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern, namePattern } from 'utils/patterns';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(namePattern, 'Name can only contains letters')\n      .required('Name is required')\n      .min(3, 'Name should be at least 3 characters')\n      .max(20, 'Name should be at most 20 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      signUp({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First name\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"name\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"confirmPassword\"\n                component=\"div\"\n              />\n            </div>\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  type = 'button',\n  theme,\n  className,\n  onClick,\n}) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  theme: PropTypes.oneOf(['color', 'white']),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\",\"error-message\":\"LoginForm_error-message__KsfSZ\",\"box\":\"LoginForm_box__s16CP\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/session/operations';\n\nimport styles from './LoginForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern } from 'utils/patterns';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const resultAction = await dispatch(\n        signIn({\n          email: values.email,\n          password: values.password,\n        })\n      ).unwrap();\n\n      const token = resultAction.token;\n      localStorage.setItem('authToken', token);\n\n      resetForm();\n      navigate('/home');\n    } catch (error) {\n      console.error('Błąd logowania:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n\n            <Button type=\"submit\" theme=\"color\">\n              Log in\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/register')}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Box_box__YJIlx\"};","import styles from './Box.module.scss';\n\nexport const Box = ({ children, className }) => {\n  return <div className={`${styles['box']} ${className}`}>{children}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__72B4n\",\"transactionsTable\":\"Transactions_transactionsTable__klztX\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__UmWQz\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__D0TIz\",\"thName\":\"Transactions_thName__SoSPQ\",\"iconSort\":\"Transactions_iconSort__jQ4-1\",\"sumSection\":\"Transactions_sumSection__QP2mB\",\"iconTransactions\":\"Transactions_iconTransactions__uSrmT\",\"amountPlus\":\"Transactions_amountPlus__xCwMa\",\"amountMinus\":\"Transactions_amountMinus__h36e+\"};","import React, { useState, useEffect } from 'react';\nimport css from './Transactions.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst initialTransactions = [\n  ['2023-12-04', '-', 'Other', 'Christmas gift', '300.00'],\n  ['2023-12-05', '+', 'Income', 'Salary', '5000.00'],\n  ['2023-12-07', '+', 'Income', 'Painting walls', '1000.00'],\n  ['2023-12-10', '-', 'Products', 'Grocery', '400.00'],\n  ['2023-12-15', '-', 'Bills', 'Rent', '2500.00'],\n  ['2023-12-15', '-', 'Bills', 'Phone', '180.00'],\n];\n\nexport const Transactions = () => {\n  const [transactions, setTransactions] = useState(initialTransactions);\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n  const [sumPlus, setSumPlus] = useState(0);\n  const [sumMinus, setSumMinus] = useState(0);\n  const [balance, setBalance] = useState(0);\n\n  const handleSort = column => {\n    const direction =\n      column === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      let valueA = column === 4 ? parseFloat(a[column]) : a[column];\n      let valueB = column === 4 ? parseFloat(b[column]) : b[column];\n\n      if (column === 0) {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      return direction === 'asc'\n        ? valueA > valueB\n          ? 1\n          : -1\n        : valueA < valueB\n        ? 1\n        : -1;\n    });\n\n    setTransactions(sortedTransactions);\n    setSortOrder({ column, direction });\n  };\n\n  const handleDelete = index => {\n    const updatedTransactions = [...transactions];\n    updatedTransactions.splice(index, 1);\n    setTransactions(updatedTransactions);\n  };\n\n  const updateSums = () => {\n    let totalPlus = 0;\n    let totalMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === '+') {\n        totalPlus += amount;\n      } else if (transaction[1] === '-') {\n        totalMinus += amount;\n      }\n    });\n\n    setSumPlus(totalPlus);\n    setSumMinus(totalMinus);\n\n    setBalance(totalPlus - totalMinus);\n  };\n\n  useEffect(() => {\n    updateSums();\n  });\n  // }, [transactions]);\n\n  const getAmountClass = type => {\n    return type === '+' ? css.amountPlus : type === '-' ? css.amountMinus : '';\n  };\n\n  const getBalanceClass = () => {\n    return balance > 0 ? css.amountPlus : balance < 0 ? css.amountMinus : '';\n  };\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Date</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Type</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Category</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Comment</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Amount</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {transactions.map((transaction, index) => (\n              <tr key={index}>\n                {transaction.map((data, dataIndex) => (\n                  <td\n                    key={dataIndex}\n                    className={\n                      dataIndex === 4 ? getAmountClass(transaction[1]) : ''\n                    }\n                  >\n                    {data}\n                  </td>\n                ))}\n                <td>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                  >\n                    <use href={`${sprite}#icon-pencil2`}></use>\n                  </svg>\n\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                    onClick={() => handleDelete(index)}\n                  >\n                    <use href={`${sprite}#icon-bin`}></use>\n                  </svg>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p className={getBalanceClass()}>\n          <b>Balance: {balance.toFixed(2)}</b>\n        </p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__EJwZ+\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__M0U+1\",\"modal__close\":\"ModalAddTransaction_modal__close__UL8+y\",\"modal__title\":\"ModalAddTransaction_modal__title__vLb8S\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__u252m\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__bTA1l\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__hOAWz\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__ywj0K\",\"form__slider\":\"ModalAddTransaction_form__slider__7zQRE\",\"form__input\":\"ModalAddTransaction_form__input__D1nMS\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__oIkkH\",\"form__category\":\"ModalAddTransaction_form__category__FJeWT\"};","export const selectIsLoading = state => state.global.isLoading;\nexport const selectIsModalLogoutOpen = state => state.global.isModalLogoutOpen;\nexport const selectIsModalAddTransactionOpen = state =>\n  state.global.isModalAddTransactionOpen;\nexport const selectIsModalEditTransactionOpen = state =>\n  state.global.isModalEditTransactionOpen;\n","import React from 'react';\nimport * as Yup from 'yup';\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\n\nimport { Button } from 'components';\nimport css from './ModalAddTransaction.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\n\nexport const AddTransactionModal = ({ isOpen, handleClose }) => {\n  const initialValues = {\n    transactionType: false,\n    amount: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().required('Category is required'),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  const handleCloseAddTransactionModal = () => {\n    console.log('Closing AddTransactionModal');\n\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setErrors }\n  ) => {\n    try {\n      console.log('Form values:', values); // Trzeba zmienić na dodanie transakcji w API\n      resetForm();\n      toast.success('Transaction added successfully!');\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setErrors(errors);\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            x\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({ isSubmitting, handleSubmit, setFieldValue, values }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"transactionType\"\n                      className={css.form__checkbox_label}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"transactionType\"\n                      id=\"transactionType\"\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}></div>\n                    </div>\n\n                    <span\n                      htmlFor=\"transactionType\"\n                      className={css.form__checkbox_label}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n\n                {values.transactionType === false && (\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"select\"\n                        name=\"category\"\n                        className={css.form__category}\n                      >\n                        <option disabled value=\"\">\n                          Select a category\n                        </option>\n                        <option value=\"category1\">Main expenses</option>\n                        <option value=\"category2\">Products</option>\n                        <option value=\"category3\">Car</option>\n                        <option value=\"category4\">Self care</option>\n                        <option value=\"category5\">Child care</option>\n                        <option value=\"category6\">Household products</option>\n                        <option value=\"category7\">Education</option>\n                        <option value=\"category8\">Leisure</option>\n                      </Field>\n                      <ErrorMessage name=\"category\" component=\"div\" />\n                    </label>\n                  </div>\n                )}\n\n                <div className={css.form__input_flex}>\n                  <div>\n                    <label>\n                      <Field type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n                      <ErrorMessage name=\"amount\" component=\"div\" />\n                    </label>\n                  </div>\n\n                  <div>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                      />\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__input}>\n                  <label>\n                    <Field as=\"textarea\" name=\"comment\" placeholder=\"Comment\" />\n                  </label>\n                </div>\n                <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                  Add\n                </Button>\n\n                <Button type=\"button\" theme=\"white\">\n                  Cancel\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport css from './ButtonAddTransactions.module.scss';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import { Transactions } from 'components/Transactions/Transactions';\nimport css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { AddTransactionModal } from 'components/ModalAddTransaction/ModalAddTransaction';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Background } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <Background />\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <Transactions />\n            <AddTransactionModal />\n          </div>\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","headers","Authorization","concat","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","sprite","namePattern","passwordPattern","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","validationSchema","Yup","shape","name","matches","required","min","max","email","password","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","setSubmitting","resetForm","signUp","Form","styles","Field","type","placeholder","ErrorMessage","component","autoComplete","Button","theme","onClick","_ref$type","buttonClass","LoginForm","handleSubmit","_ref2","resultAction","token","signIn","unwrap","localStorage","setItem","finish","_x","_x2","Background","Box","initialTransactions","Transactions","transactions","setTransactions","_useState3","column","direction","_useState4","sortOrder","setSortOrder","_useState5","_useState6","sumPlus","setSumPlus","_useState7","_useState8","sumMinus","setSumMinus","_useState9","_useState10","balance","setBalance","handleSort","sortedTransactions","_toConsumableArray","sort","a","b","valueA","parseFloat","valueB","Date","totalPlus","totalMinus","forEach","transaction","amount","updateSums","title","index","dataIndex","updatedTransactions","splice","handleDelete","toFixed","selectIsModalAddTransactionOpen","state","global","isModalAddTransactionOpen","AddTransactionModal","isOpen","handleClose","transactionType","category","date","comment","typeError","positive","isAddTransactionModalOpen","useSelector","_ref3","setErrors","errors","log","toast","inner","e","message","setIsModalAddTransactionOpen","_ref4","isSubmitting","setFieldValue","htmlFor","id","as","disabled","value","Datetime","onChange","ButtonAddTransactions","Helmet","Navigation"],"sourceRoot":""}