{"version":3,"file":"static/js/215.3dc89e8a.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Background/BackgroundBlurred.module.scss?c710","components/Background/BackgroundBlurred.jsx","webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/Navigation/NavigationMobile.module.scss?4239","components/Navigation/NavigationMobile.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/TransactionsManager/Transactions/Transactions.module.scss?167d","webpack://wallet-application/./src/components/TransactionsManager/ModalConfirmDelete/ModalConfirmDelete.module.scss?ba25","components/TransactionsManager/ModalConfirmDelete/ModalConfirmDelete.jsx","components/TransactionsManager/Transactions/Transactions.jsx","webpack://wallet-application/./src/components/TransactionsManager/ModalAddTransaction/ModalAddTransaction.module.scss?a3a7","components/TransactionsManager/ModalAddTransaction/ModalAddTransaction.jsx","webpack://wallet-application/./src/components/TransactionsManager/ModalEditTransaction/ModalEditTransaction.module.scss?51da","components/TransactionsManager/ModalEditTransaction/ModalEditTransaction.jsx","webpack://wallet-application/./src/components/TransactionsManager/EmptyWallet/EmptyWallet.module.scss?5729","components/TransactionsManager/EmptyWallet/EmptyWallet.jsx","components/TransactionsManager/TransactionManager.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\n\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\n\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n  const linkClass = isActive ? css.active : css.link;\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"BackgroundBlurred_background__i2tYL\"};","import styles from './BackgroundBlurred.module.scss';\n\nexport const BackgroundBlurred = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectUserDetails } from 'redux/session/selectors';\nimport { getUserDetails } from 'redux/session/operations';\n\nimport css from './Balance.module.scss';\n\nexport const Balance = () => {\n  const dispatch = useDispatch();\n  const userDetails = useSelector(selectUserDetails);\n  const userBalance = userDetails ? userDetails.balance : 0;\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch]);\n\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN {userBalance}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\"};","import React, { useState, useEffect } from 'react';\nimport { walletInstance } from 'utils/api';\n\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\n\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"NavigationMobile_navigation__mkvLU\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\n\nimport css from './NavigationMobile.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst NavigationMobile = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/currency\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-dollar`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavigationMobile;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Home_wrapper__53Los\",\"mainMobile\":\"Home_mainMobile__FYfgM\",\"mainTabletAndDesktop\":\"Home_mainTabletAndDesktop__EA5yb\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__zIQxE\",\"transactionsTable\":\"Transactions_transactionsTable__83vc7\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__8+gku\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__5CQS8\",\"thName\":\"Transactions_thName__3q6MS\",\"iconSort\":\"Transactions_iconSort__6FlXB\",\"sumSection\":\"Transactions_sumSection__rkTQ1\",\"iconTransactions\":\"Transactions_iconTransactions__lZpcx\",\"amountPlus\":\"Transactions_amountPlus__gFaHt\",\"amountMinus\":\"Transactions_amountMinus__4FyfO\",\"tablePlus\":\"Transactions_tablePlus__VfqW1\",\"tableMinus\":\"Transactions_tableMinus__Li-bx\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalConfirmDelete_modal__h1p0a\",\"modal__overlay\":\"ModalConfirmDelete_modal__overlay__C6aKg\",\"modal__close\":\"ModalConfirmDelete_modal__close__-sOJz\",\"modal__title\":\"ModalConfirmDelete_modal__title__GTUI3\",\"btn_container\":\"ModalConfirmDelete_btn_container__4476O\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectIsModalConfirmDeleteOpen } from 'redux/global/selectors';\nimport { setIsModalConfirmDeleteOpen } from 'redux/global/globalSlice';\n\nimport { Button } from 'components';\n\nimport css from './ModalConfirmDelete.module.scss';\nimport sprite from '../../../images/icons.svg';\n\nexport const ModalConfirmDelete = ({ onConfirm }) => {\n  const dispatch = useDispatch();\n  const isModalConfirmDeleteOpen = useSelector(selectIsModalConfirmDeleteOpen);\n\n  const handleClose = () => {\n    dispatch(setIsModalConfirmDeleteOpen(false));\n  };\n\n  return isModalConfirmDeleteOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>\n            Are you sure you want to delete this transaction?{' '}\n            <p>*This action cannot be undone.</p>\n          </h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleClose}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n          <div className={css.btn_container}>\n            <Button type=\"button\" theme=\"color\" onClick={onConfirm}>\n              Yes, Delete\n            </Button>\n\n            <Button type=\"button\" theme=\"white\" onClick={handleClose}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","import React from 'react';\nimport css from './Transactions.module.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport sprite from 'images/icons.svg';\nimport { setIsModalConfirmDeleteOpen } from 'redux/global/globalSlice';\nimport { ModalConfirmDelete } from '../ModalConfirmDelete/ModalConfirmDelete';\n\nexport const Transactions = ({ transactions, onDelete, onEdit }) => {\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n\n  const [selectedTransactionId, setSelectedTransactionId] = useState(null);\n  const dispatch = useDispatch();\n\n  const getAmountClass = type => {\n    return type === 'Income'\n      ? css.amountPlus\n      : type === 'Expense'\n      ? css.amountMinus\n      : '';\n  };\n\n  const handleSort = sortColumn => {\n    const direction =\n      sortColumn === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n    setSortOrder({ column: sortColumn, direction });\n  };\n\n  const handleDelete = transactionId => {\n    setSelectedTransactionId(transactionId);\n    dispatch(setIsModalConfirmDeleteOpen(true));\n  };\n  const confirmDelete = () => {\n    onDelete(selectedTransactionId);\n    dispatch(setIsModalConfirmDeleteOpen(false));\n  };\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    return `${day}.${month}.${year}`;\n  };\n\n  const formatType = type => {\n    if (type === 'Expense') {\n      return <span className={css.tableMinus}>-</span>;\n    } else if (type === 'Income') {\n      return <span className={css.tablePlus}>+</span>;\n    }\n    return type;\n  };\n\n  return (\n    <div className={css.tableBg}>\n      <ModalConfirmDelete onConfirm={confirmDelete} />\n      <table className={css.transactionsTable}>\n        <thead className={css.transactionsTableHead}>\n          <tr>\n            <th onClick={() => handleSort(0)} title=\"Sort\">\n              <div className={css.thName}>\n                <span>Date</span>\n                <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                  <use href={`${sprite}#icon-sort`}></use>\n                </svg>\n              </div>\n            </th>\n            <th onClick={() => handleSort(1)} title=\"Sort\">\n              <div className={css.thName}>\n                <span>Type</span>\n                <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                  <use href={`${sprite}#icon-sort`}></use>\n                </svg>\n              </div>\n            </th>\n            <th onClick={() => handleSort(2)} title=\"Sort\">\n              <div className={css.thName}>\n                <span>Category</span>\n                <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                  <use href={`${sprite}#icon-sort`}></use>\n                </svg>\n              </div>\n            </th>\n            <th onClick={() => handleSort(3)} title=\"Sort\">\n              <div className={css.thName}>\n                <span>Comment</span>\n                <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                  <use href={`${sprite}#icon-sort`}></use>\n                </svg>\n              </div>\n            </th>\n            <th onClick={() => handleSort(4)} title=\"Sort\">\n              <div className={css.thName}>\n                <span>Amount</span>\n                <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                  <use href={`${sprite}#icon-sort`}></use>\n                </svg>\n              </div>\n            </th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.map(transaction => (\n            <tr key={transaction._id} data-type={transaction.type}>\n              <td data-label=\"Date\">{formatDate(transaction.date)}</td>\n              <td data-label=\"Type\">{formatType(transaction.type)}</td>\n              <td data-label=\"Category\">{transaction.category}</td>\n              <td data-label=\"Comment\">{transaction.comment}</td>\n              <td data-label=\"Sum\" className={getAmountClass(transaction.type)}>\n                {transaction.sum}\n              </td>\n              <td data-label=\"Options\">\n                <svg\n                  className={css.iconTransactions}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={() => {\n                    console.log(transaction);\n                    onEdit(transaction);\n                  }}\n                >\n                  <use href={`${sprite}#icon-pencil2`}></use>\n                </svg>\n                <svg\n                  className={css.iconTransactions}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={() => handleDelete(transaction._id)}\n                >\n                  <use href={`${sprite}#icon-bin`}></use>\n                </svg>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__92Wan\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__5muZL\",\"modal__close\":\"ModalAddTransaction_modal__close__2oFKS\",\"modal__title\":\"ModalAddTransaction_modal__title__lkrl8\",\"form__label\":\"ModalAddTransaction_form__label__pL9sF\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__Ewtgx\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__fP5ud\",\"form__checkbox_label_expense\":\"ModalAddTransaction_form__checkbox_label_expense__Pkkrh\",\"form__checkbox_label_income\":\"ModalAddTransaction_form__checkbox_label_income__1jimB\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__mqlbb\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__TZ4ho\",\"form__slider\":\"ModalAddTransaction_form__slider__UGKmj\",\"form__input\":\"ModalAddTransaction_form__input__mcnWJ\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__JnydG\",\"form__date\":\"ModalAddTransaction_form__date__7R5ye\",\"form__flex_container\":\"ModalAddTransaction_form__flex_container__agrkZ\",\"form__category\":\"ModalAddTransaction_form__category__9vIwc\",\"form__category_active\":\"ModalAddTransaction_form__category_active__eIpA1\",\"form__btn_container\":\"ModalAddTransaction_form__btn_container__Lecm6\",\"error_message\":\"ModalAddTransaction_error_message__J5jVO\"};","import { useDispatch, useSelector } from 'react-redux';\nimport Datetime from 'react-datetime';\n\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\nimport { selectUserCategories } from 'redux/finance/selectors';\n\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport { Button } from 'components';\nimport * as Yup from 'yup';\n\nimport css from './ModalAddTransaction.module.scss';\nimport sprite from '../../../images/icons.svg';\n\nexport const AddTransactionModal = ({ addTransaction }) => {\n  const initialValues = {\n    type: false,\n    sum: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    type: Yup.string(),\n    sum: Yup.number()\n      .positive('Sum must be a positive number')\n      .required('Sum is required'),\n    category: Yup.string().required('Category is required'),\n    date: Yup.date().required('Date is required'),\n    comment: Yup.string(),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n  const userCategories = useSelector(selectUserCategories);\n\n  const handleCloseAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    try {\n      const valuesToSend = {\n        sum: values.sum,\n        date: values.date.toISOString(),\n        type: values.type ? 'Income' : 'Expense',\n        category: values.category,\n        comment: values.comment,\n      };\n      addTransaction(valuesToSend);\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    } finally {\n      setSubmitting(false);\n      resetForm();\n      handleCloseAddTransactionModal();\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({\n              isSubmitting,\n              handleSubmit,\n              setFieldValue,\n              values,\n              setValues,\n              setErrors,\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"type\"\n                      id=\"type\"\n                      onClick={() => {\n                        setValues({\n                          ...initialValues,\n                          type: values.type,\n                        });\n                        setErrors({});\n                      }}\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.type === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"select\"\n                        name=\"category\"\n                        className={`${css.form__category} ${\n                          values.category !== ''\n                            ? css.form__category_active\n                            : null\n                        }`}\n                      >\n                        <option hidden value=\"\">\n                          Select a category\n                        </option>\n                        {userCategories\n                          .filter(category =>\n                            values.type === true\n                              ? category.type === 'Income'\n                              : category.type === 'Expense'\n                          )\n                          .map(category => (\n                            <option key={category._id} value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                      </Field>\n                      <ErrorMessage name=\"category\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"sum\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"sum\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Add\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    onClick={handleCloseAddTransactionModal}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalEditTransaction_modal__aESX1\",\"modal__overlay\":\"ModalEditTransaction_modal__overlay__7b9Pt\",\"modal__close\":\"ModalEditTransaction_modal__close__OWdVa\",\"modal__title\":\"ModalEditTransaction_modal__title__Lmmva\",\"form__label\":\"ModalEditTransaction_form__label__ZJHe-\",\"form__checkbox_container\":\"ModalEditTransaction_form__checkbox_container__fl6ho\",\"form__checkbox_label\":\"ModalEditTransaction_form__checkbox_label__o8IC2\",\"form__checkbox_label_expense\":\"ModalEditTransaction_form__checkbox_label_expense__BFrlP\",\"form__checkbox_label_income\":\"ModalEditTransaction_form__checkbox_label_income__hOXJt\",\"form__checkbox_input\":\"ModalEditTransaction_form__checkbox_input__uiOCB\",\"form__checkbox_custom\":\"ModalEditTransaction_form__checkbox_custom__3KD4B\",\"form__slider\":\"ModalEditTransaction_form__slider__TPwSP\",\"form__input\":\"ModalEditTransaction_form__input__c6Cb5\",\"form__input_flex\":\"ModalEditTransaction_form__input_flex__Px3k1\",\"form__date\":\"ModalEditTransaction_form__date__-TvAf\",\"form__flex_container\":\"ModalEditTransaction_form__flex_container__T308u\",\"form__category\":\"ModalEditTransaction_form__category__MvXDV\",\"form__category_active\":\"ModalEditTransaction_form__category_active__GbP68\",\"form__btn_container\":\"ModalEditTransaction_form__btn_container__OXqrQ\",\"error_message\":\"ModalEditTransaction_error_message__kKrvE\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\n\nimport { setIsModalEditTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalEditTransactionOpen } from 'redux/global/selectors';\nimport { selectUserCategories } from 'redux/finance/selectors';\nimport { updateTransaction } from 'redux/finance/operations';\nimport { getUserDetails } from 'redux/session/operations';\n\nimport { Button } from 'components';\n\nimport 'react-datetime/css/react-datetime.css';\nimport sprite from '../../../images/icons.svg';\nimport css from './ModalEditTransaction.module.scss';\n\nexport const EditTransactionModal = ({\n  editedTransaction,\n  onTransactionUpdate,\n}) => {\n  const initialValues = {\n    type: editedTransaction ? editedTransaction.type === 'Income' : false,\n    sum: editedTransaction ? editedTransaction.sum : '',\n    category: editedTransaction ? editedTransaction.categoryId : '',\n    date: editedTransaction ? new Date(editedTransaction.date) : new Date(),\n    comment: editedTransaction ? editedTransaction.comment : '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    type: Yup.string(),\n    sum: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().required('Category is required'),\n    comment: Yup.string(),\n  });\n\n  const dispatch = useDispatch();\n  const isEditTransactionModalOpen = useSelector(\n    selectIsModalEditTransactionOpen\n  );\n  const userCategories = useSelector(selectUserCategories);\n\n  const handleCloseEditTransactionModal = () => {\n    dispatch(setIsModalEditTransactionOpen(false));\n  };\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    setSubmitting(true);\n    try {\n      const transactionData = {\n        transactionID: editedTransaction._id,\n        sum: values.sum,\n        date: values.date.toISOString().split('T')[0],\n        type: values.type ? 'Income' : 'Expense',\n        category: values.category,\n        comment: values.comment,\n      };\n\n      await dispatch(updateTransaction(transactionData));\n      await dispatch(getUserDetails());\n      onTransactionUpdate();\n\n      toast.success('Transaction updated successfully!');\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n      toast.error('Error updating transaction. Please try again.');\n    } finally {\n      setSubmitting(false);\n      resetForm();\n      handleCloseEditTransactionModal();\n    }\n  };\n\n  return isEditTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Edit Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseEditTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({\n              isSubmitting,\n              handleSubmit,\n              setFieldValue,\n              values,\n              setValues,\n              setErrors,\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"type\"\n                      id=\"type\"\n                      onClick={() => {\n                        setValues({\n                          ...initialValues,\n                          type: values.type,\n                        });\n                        setErrors({});\n                      }}\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.type === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"select\"\n                        name=\"category\"\n                        className={`${css.form__category} ${\n                          values.category !== ''\n                            ? css.form__category_active\n                            : null\n                        }`}\n                      >\n                        {userCategories\n                          .filter(category =>\n                            values.type === true\n                              ? category.type === 'Income'\n                              : category.type === 'Expense'\n                          )\n                          .map(category => (\n                            <option key={category._id} value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                      </Field>\n                      <ErrorMessage name=\"category\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"sum\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"sum\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Edit\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    onClick={handleCloseEditTransactionModal}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EmptyWallet_container__f3TeQ\",\"emptywallet\":\"EmptyWallet_emptywallet__nF-NS\"};","import React from 'react';\n\nimport walletImage from '../../../images/wallet.png';\nimport css from './EmptyWallet.module.scss';\n\nexport const EmptyWallet = () => {\n  return (\n    <div className={css.container}>\n      <div className={css.emptywallet}>\n        <p>Your Wallet is empty. Enter your first transaction.</p>\n        <img src={walletImage} alt=\"Empty Wallet\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Transactions } from './Transactions/Transactions';\nimport {\n  addTransaction as addTransactionThunk,\n  getTransactions,\n  deleteTransaction,\n} from 'redux/finance/operations';\nimport { getUserDetails } from 'redux/session/operations';\nimport { setIsModalEditTransactionOpen } from 'redux/global/globalSlice';\nimport { selectTransactions } from 'redux/finance/selectors';\nimport { AddTransactionModal } from './ModalAddTransaction/ModalAddTransaction';\nimport { EditTransactionModal } from './ModalEditTransaction/ModalEditTransaction';\nimport { EmptyWallet } from './EmptyWallet/EmptyWallet';\n\nexport const TransactionsManager = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const [isTransactionAdded, setTransactionAdded] = useState(false);\n  const [editedTransaction, setEditedTransaction] = useState(null);\n\n  useEffect(() => {\n    dispatch(getTransactions());\n  }, [dispatch, isTransactionAdded]);\n\n  const handleAddTransaction = newTransactionData => {\n    dispatch(addTransactionThunk(newTransactionData))\n      .then(() => {\n        setTransactionAdded(prevState => !prevState);\n        dispatch(getUserDetails());\n      })\n      .catch(error => {\n        console.error('Error while adding the transaction:', error);\n      });\n  };\n\n  const handleEdit = transaction => {\n    console.log('Edytowanie transakcji:', transaction);\n    setEditedTransaction(transaction);\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const handleDelete = transactionId => {\n    dispatch(deleteTransaction(transactionId))\n      .then(() => {\n        dispatch(getTransactions());\n        dispatch(getUserDetails());\n      })\n      .catch(error => {\n        console.error('Error while deleting the transaction:', error);\n      });\n  };\n\n  return (\n    <div>\n      <AddTransactionModal addTransaction={handleAddTransaction} />\n      <EditTransactionModal\n        editedTransaction={editedTransaction}\n        onTransactionUpdate={() => dispatch(getTransactions())}\n      />\n      {transactions.length === 0 ? (\n        <EmptyWallet />\n      ) : (\n        <Transactions\n          transactions={transactions}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nimport css from './ButtonAddTransactions.module.scss';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { TransactionsManager } from 'components/TransactionsManager/TransactionManager';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Helmet } from 'react-helmet';\nimport NavigationMobile from 'components/Navigation/NavigationMobile';\nimport { useMediaQuery } from 'react-responsive';\nimport { getAllUserCategories } from 'redux/finance/operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { BackgroundBlurred } from 'components/Background/BackgroundBlurred';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n  const isMobileView = useMediaQuery({ maxWidth: 767 });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllUserCategories());\n  }, [dispatch]);\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <section>\n        <BackgroundBlurred />\n        <div className={css.wrapper}>\n          {isMobileView ? (\n            <div className={css.mainMobile}>\n              <NavigationMobile />\n              <Balance />\n              <TransactionsManager />\n            </div>\n          ) : (\n            <div className={css.mainTabletAndDesktop}>\n              <div className={css.sidebar}>\n                <div>\n                  {' '}\n                  <Navigation />\n                  <Balance />\n                </div>\n                <div>\n                  <CurrencyTable />\n                </div>\n              </div>\n              <div className={css.main}>\n                <TransactionsManager />\n              </div>\n            </div>\n          )}{' '}\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","to","children","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","css","_jsx","NavLink","className","BackgroundBlurred","styles","Balance","dispatch","useDispatch","userDetails","useSelector","selectUserDetails","userBalance","balance","useEffect","getUserDetails","_jsxs","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","walletInstance","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","ActiveNavLink","width","height","href","concat","sprite","ModalConfirmDelete","onConfirm","handleClose","setIsModalConfirmDeleteOpen","selectIsModalConfirmDeleteOpen","type","onClick","Button","theme","Transactions","transactions","onDelete","onEdit","column","direction","sortOrder","setSortOrder","_useState3","_useState4","selectedTransactionId","setSelectedTransactionId","getAmountClass","handleSort","sortColumn","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","title","transaction","category","comment","sum","log","transactionId","AddTransactionModal","addTransaction","initialValues","validationSchema","Yup","shape","positive","required","isAddTransactionModalOpen","selectIsModalAddTransactionOpen","userCategories","selectUserCategories","handleCloseAddTransactionModal","setIsModalAddTransactionOpen","handleSubmit","_ref3","values","_ref2","setSubmitting","resetForm","valuesToSend","toISOString","_x","_x2","Formik","onSubmit","_ref4","isSubmitting","setFieldValue","setValues","setErrors","Form","htmlFor","Field","name","id","_objectSpread","as","hidden","value","filter","ErrorMessage","component","placeholder","Datetime","onChange","dateFormat","timeFormat","disabled","EditTransactionModal","editedTransaction","onTransactionUpdate","categoryId","typeError","isEditTransactionModalOpen","selectIsModalEditTransactionOpen","handleCloseEditTransactionModal","setIsModalEditTransactionOpen","transactionData","transactionID","split","updateTransaction","toast","finish","EmptyWallet","src","walletImage","alt","TransactionsManager","selectTransactions","isTransactionAdded","setTransactionAdded","setEditedTransaction","getTransactions","newTransactionData","addTransactionThunk","then","prevState","catch","length","deleteTransaction","ButtonAddTransactions","isMobileView","useMediaQuery","maxWidth","getAllUserCategories","Helmet","NavigationMobile","Navigation"],"sourceRoot":""}