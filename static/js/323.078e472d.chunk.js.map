{"version":3,"file":"static/js/323.078e472d.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","utils/patterns.js","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Box/Box.module.scss?20ba","components/Box/Box.jsx","webpack://wallet-application/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://wallet-application/./src/components/Stats/Stats.module.scss?4742","components/Stats/Doughnut.jsx","components/Stats/Bar.jsx","components/Stats/Stats.jsx","webpack://wallet-application/./src/pages/Statistics/Statistics.module.scss?6c4b","pages/Statistics/Statistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (!authToken) {\n          console.error('No auth token found');\n          return;\n        }\n\n        const response = await axios.get(\n          'http://localhost:3000/api/currencies',\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  // }, [authToken]); Obecnie fetchData jest wywoływana tylko raz. Jeśli token ulegnie zmianie, można ponownie załadować dane.\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"box\":\"RegistrationForm_box__y2CqE\"};","export const namePattern = /^[a-zA-ZąćęłńóśżźĄĆĘŁŃÓŚŻŹ]+$/;\nexport const passwordPattern =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%-^&*()_+=[\\]{}'\"\\\\|,.<>/?~])/;\n","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/session/operations';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button, Input } from 'components';\nimport { passwordPattern, namePattern } from 'utils/patterns';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(namePattern, 'Name can only contains letters')\n      .required('Name is required')\n      .min(3, 'Name should be at least 3 characters')\n      .max(20, 'Name should be at most 20 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      signUp({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']} autoComplete=\"off\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name\"\n              iconID=\"icon-baseline-account_box\"\n            />\n\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  type = 'button',\n  theme,\n  className,\n  onClick,\n}) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  theme: PropTypes.oneOf(['color', 'white']),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/session/operations';\n\nimport styles from './LoginForm.module.scss';\nimport { Button, Input } from 'components';\nimport { passwordPattern } from 'utils/patterns';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const resultAction = await dispatch(\n        signIn({\n          email: values.email,\n          password: values.password,\n        })\n      ).unwrap();\n\n      const token = resultAction.token;\n      localStorage.setItem('authToken', token);\n\n      resetForm();\n      navigate('/home');\n    } catch (error) {\n      console.error('Błąd logowania:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']} autoComplete=\"off\">\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Log in\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/register')}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Box_box__YJIlx\"};","import PropTypes from 'prop-types';\n\nimport styles from './Box.module.scss';\n\nexport const Box = ({ children, className }) => {\n  return <div className={`${styles['box']} ${className}`}>{children}</div>;\n};\n\nBox.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Input_box__8gunV\",\"form-input\":\"Input_form-input__IGnal\",\"error-message\":\"Input_error-message__98oTL\"};","import PropTypes from 'prop-types';\n\nimport { useField } from 'formik';\n\nimport sprite from 'images/icons.svg';\nimport styles from './Input.module.scss';\n\nexport const Input = ({ iconID, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['box']}>\n      <input className={styles['form-input']} {...field} {...props} />\n\n      <svg width=\"20px\" height=\"20px\">\n        <use href={`${sprite}#${iconID}`}></use>\n      </svg>\n\n      {meta.touched && meta.error ? (\n        <div className={styles['error-message']}>{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  autoComplete: PropTypes.string,\n  iconID: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"statsContainer\":\"Stats_statsContainer__0UttW\",\"charts\":\"Stats_charts__cVmoi\",\"selectors\":\"Stats_selectors__S6SvL\"};","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const DoughnutChart = () => {\n  const data = {\n    labels: ['Expenses', 'Incomes'],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [5000, 4300],\n        backgroundColor: ['rgba(255, 99, 132)', 'rgba(75, 192, 192)'],\n        hoverBackgroundColor: ['rgba(255, 99, 162)', 'rgba(75, 192, 202)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in total',\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '350px', height: '350px' }}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport faker from 'faker';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const BarChart = () => {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in months',\n      },\n    },\n  };\n\n  const labels = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Expenses',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 10000 })),\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Incomes',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 10000 })),\n        backgroundColor: 'rgba(75, 192, 192)',\n      },\n    ],\n  };\n\n  return (\n    <div style={{ width: '450px', height: '450px' }}>\n      <Bar options={options} data={data} />\n    </div>\n  );\n};\n","import css from './Stats.module.scss';\nimport React, { useState } from 'react';\nimport { DoughnutChart } from './Doughnut';\nimport { BarChart } from './Bar';\nimport Select from 'react-select';\n\nexport const Stats = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const categoryOptions = [\n    { value: 'expenses', label: 'Expenses' },\n    { value: 'incomes', label: 'Incomes' },\n  ];\n\n  const handleCategoryChange = selectedOption => {\n    setSelectedCategory(selectedOption);\n  };\n\n  return (\n    <div className={css.statsContainer}>\n      Statistics\n      <div className={css.charts}>\n        <DoughnutChart />\n        <BarChart />\n      </div>\n      <div className={css.selections}>\n        Select values\n        <div className={css.selectors}>\n          <Select\n            options={categoryOptions}\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Statistics_container__88ahX\",\"sidebar\":\"Statistics_sidebar__Qylm+\",\"main\":\"Statistics_main__LSNEX\"};","import { Stats } from 'components/Stats/Stats';\nimport css from './Statistics.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { Background } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Statistics = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Statistics</title>\n      </Helmet>\n      <Background />\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            <Stats />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","authToken","response","_context","prev","next","localStorage","getItem","console","error","abrupt","axios","headers","Authorization","concat","sent","data","t0","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","sprite","namePattern","passwordPattern","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","validationSchema","Yup","shape","name","matches","required","min","max","email","password","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","setSubmitting","resetForm","signUp","Form","styles","autoComplete","Input","type","placeholder","iconID","Button","theme","onClick","_ref$type","buttonClass","LoginForm","handleSubmit","_ref2","resultAction","token","signIn","unwrap","setItem","finish","_x","_x2","Background","Box","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","_objectSpread","touched","ChartJS","ArcElement","Tooltip","Legend","DoughnutChart","style","Doughnut","options","plugins","legend","position","title","display","text","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","CategoryScale","LinearScale","BarElement","Title","BarChart","faker","Bar","responsive","Stats","selectedCategory","setSelectedCategory","Select","value","onChange","selectedOption","Helmet","Navigation"],"sourceRoot":""}