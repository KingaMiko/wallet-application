{"version":3,"file":"static/js/323.f6b4eaf9.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","utils/patterns.js","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Box/Box.module.scss?20ba","components/Box/Box.jsx","webpack://wallet-application/./src/components/Stats/Stats.module.scss?4742","components/Stats/Doughnut.jsx","components/Stats/Bar.jsx","components/Stats/Stats.jsx","webpack://wallet-application/./src/pages/Statistics/Statistics.module.scss?6c4b","pages/Statistics/Statistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        //do zrobienia pobieranie tokena\n        const authToken =\n          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NmY0NjRkMmJlOGRkZWQxYWY4MDhjNyIsIm5hbWUiOiJLaW5nYSIsImlhdCI6MTcwMTc5MTM0MiwiZXhwIjoxNzAxNzk0OTQyfQ.IYdeMehD9ZMqXjBY2nl8Wu4jQBbOq1F86hjCgTzBKXs';\n        const response = await axios.get(\n          'http://localhost:3000/api/currencies',\n          {\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n            },\n          }\n        );\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"error-message\":\"RegistrationForm_error-message__xXzPo\",\"box\":\"RegistrationForm_box__y2CqE\"};","export const namePattern = /^[a-zA-ZąćęłńóśżźĄĆĘŁŃÓŚŻŹ]+$/;\nexport const passwordPattern =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+=[\\]{}'\"\\\\|,.<>/?~])/;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/session/operations';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern, namePattern } from 'utils/patterns';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(namePattern, 'Name can only contains letters')\n      .required('Name is required')\n      .min(3, 'Name should be at least 3 characters')\n      .max(20, 'Name should be at most 20 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      signUp({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First name\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"name\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"confirmPassword\"\n                placeholder=\"Confirm password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"confirmPassword\"\n                component=\"div\"\n              />\n            </div>\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  type = 'button',\n  theme,\n  className,\n  onClick,\n}) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  theme: PropTypes.oneOf(['color', 'white']),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\",\"error-message\":\"LoginForm_error-message__KsfSZ\",\"box\":\"LoginForm_box__s16CP\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/session/operations';\n\nimport styles from './LoginForm.module.scss';\nimport { Button } from 'components';\nimport { passwordPattern } from 'utils/patterns';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        'The password should contain at least one uppercase letter, one special character, and one digit'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      signIn({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']}>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"E-mail\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"email\"\n                component=\"div\"\n              />\n            </div>\n            <div className={styles['box']}>\n              <Field\n                className={styles['form-input']}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"off\"\n              />\n              <ErrorMessage\n                className={styles['error-message']}\n                name=\"password\"\n                component=\"div\"\n              />\n            </div>\n\n            <Button type=\"submit\" theme=\"color\">\n              Log in\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/register')}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Box_box__YJIlx\"};","import styles from './Box.module.scss';\n\nexport const Box = ({ children, className }) => {\n  return <div className={`${styles['box']} ${className}`}>{children}</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"statsContainer\":\"Stats_statsContainer__0UttW\",\"charts\":\"Stats_charts__cVmoi\",\"selectors\":\"Stats_selectors__S6SvL\"};","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const DoughnutChart = () => {\n  const data = {\n    labels: ['Expenses', 'Incomes'],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [5000, 4300],\n        backgroundColor: ['rgba(255, 99, 132)', 'rgba(75, 192, 192)'],\n        hoverBackgroundColor: ['rgba(255, 99, 162)', 'rgba(75, 192, 202)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in total',\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '350px', height: '350px' }}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport faker from 'faker';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const BarChart = () => {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in months',\n      },\n    },\n  };\n\n  const labels = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n  ];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Expenses',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 10000 })),\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Incomes',\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 10000 })),\n        backgroundColor: 'rgba(75, 192, 192)',\n      },\n    ],\n  };\n\n  return (\n    <div style={{ width: '450px', height: '450px' }}>\n      <Bar options={options} data={data} />\n    </div>\n  );\n};\n","import css from './Stats.module.scss';\nimport React, { useState } from 'react';\nimport { DoughnutChart } from './Doughnut';\nimport { BarChart } from './Bar';\nimport Select from 'react-select';\n\nexport const Stats = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const categoryOptions = [\n    { value: 'expenses', label: 'Expenses' },\n    { value: 'incomes', label: 'Incomes' },\n  ];\n\n  const handleCategoryChange = selectedOption => {\n    setSelectedCategory(selectedOption);\n  };\n\n  return (\n    <div className={css.statsContainer}>\n      Statistics\n      <div className={css.charts}>\n        <DoughnutChart />\n        <BarChart />\n      </div>\n      <div className={css.selections}>\n        Select values\n        <div className={css.selectors}>\n          <Select\n            options={categoryOptions}\n            value={selectedCategory}\n            onChange={handleCategoryChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Statistics_container__88ahX\",\"sidebar\":\"Statistics_sidebar__Qylm+\",\"main\":\"Statistics_main__LSNEX\"};","import { Stats } from 'components/Stats/Stats';\nimport css from './Statistics.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { Background } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Statistics = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Statistics</title>\n      </Helmet>\n      <Background />\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            <Stats />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","headers","Authorization","concat","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","sprite","namePattern","passwordPattern","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","validationSchema","Yup","shape","name","matches","required","min","max","email","password","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","setSubmitting","resetForm","signUp","Form","styles","Field","type","placeholder","ErrorMessage","component","autoComplete","Button","theme","onClick","_ref$type","buttonClass","LoginForm","signIn","Background","Box","ChartJS","ArcElement","Tooltip","Legend","DoughnutChart","style","Doughnut","options","plugins","legend","position","title","display","text","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","CategoryScale","LinearScale","BarElement","Title","BarChart","faker","Bar","responsive","Stats","selectedCategory","setSelectedCategory","Select","value","onChange","selectedOption","Helmet","Navigation"],"sourceRoot":""}