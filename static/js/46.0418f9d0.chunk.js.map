{"version":3,"file":"static/js/46.0418f9d0.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Box/Box.module.scss?20ba","components/Box/Box.jsx","webpack://wallet-application/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://wallet-application/./src/components/Transactions/Transactions.module.scss?e1bb","components/Transactions/Transactions.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","components/ModalAddTransaction/ModalAddTransaction.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"box\":\"RegistrationForm_box__y2CqE\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUp } from 'redux/session/operations';\nimport { selectPatterns } from 'redux/global/selectors';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button, Input } from 'components';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const patterns = useSelector(selectPatterns);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(\n        new RegExp(patterns.namePattern.pattern),\n        patterns.namePattern.description\n      )\n      .required('Name is required')\n      .min(3, 'Name should be at least 3 characters')\n      .max(20, 'Name should be at most 20 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        new RegExp(patterns.passwordPattern.pattern),\n        patterns.passwordPattern.description\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n\n    dispatch(signUp({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']} autoComplete=\"off\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name\"\n              iconID=\"icon-baseline-account_box\"\n            />\n\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  type = 'button',\n  theme,\n  className,\n  onClick,\n}) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  theme: PropTypes.oneOf(['color', 'white']),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signIn } from 'redux/session/operations';\nimport { selectPatterns } from 'redux/global/selectors';\n\nimport styles from './LoginForm.module.scss';\nimport { Button, Input } from 'components';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const patterns = useSelector(selectPatterns);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        new RegExp(patterns.passwordPattern.pattern),\n        patterns.passwordPattern.description\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const { email, password } = values;\n\n      dispatch(signIn({ email, password })).unwrap();\n      resetForm();\n    } catch (error) {\n      console.error('Login fail:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']} autoComplete=\"off\">\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Log in\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/register')}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Box_box__YJIlx\"};","import PropTypes from 'prop-types';\n\nimport styles from './Box.module.scss';\n\nexport const Box = ({ children, className }) => {\n  return <div className={`${styles['box']} ${className}`}>{children}</div>;\n};\n\nBox.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Input_box__8gunV\",\"form-input\":\"Input_form-input__IGnal\",\"error-message\":\"Input_error-message__98oTL\"};","import PropTypes from 'prop-types';\n\nimport { useField } from 'formik';\n\nimport sprite from 'images/icons.svg';\nimport styles from './Input.module.scss';\n\nexport const Input = ({ iconID, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['box']}>\n      <input className={styles['form-input']} {...field} {...props} />\n\n      <svg width=\"20px\" height=\"20px\">\n        <use href={`${sprite}#${iconID}`}></use>\n      </svg>\n\n      {meta.touched && meta.error ? (\n        <div className={styles['error-message']}>{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  autoComplete: PropTypes.string,\n  iconID: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__72B4n\",\"transactionsTable\":\"Transactions_transactionsTable__klztX\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__UmWQz\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__D0TIz\",\"thName\":\"Transactions_thName__SoSPQ\",\"iconSort\":\"Transactions_iconSort__jQ4-1\",\"sumSection\":\"Transactions_sumSection__QP2mB\",\"iconTransactions\":\"Transactions_iconTransactions__uSrmT\",\"amountPlus\":\"Transactions_amountPlus__xCwMa\",\"amountMinus\":\"Transactions_amountMinus__h36e+\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport css from './Transactions.module.scss';\nimport sprite from 'images/icons.svg';\nimport axios from 'axios';\n\nexport const Transactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [, setSums] = useState({ sumPlus: 0, sumMinus: 0, balance: 0 });\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n\n  const calculateSums = useCallback(() => {\n    let sumPlus = 0;\n    let sumMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === 'Income') {\n        sumPlus += amount;\n      } else if (transaction[1] === 'Expense') {\n        sumMinus += amount;\n      }\n    });\n\n    return { sumPlus, sumMinus, balance: sumPlus - sumMinus };\n  }, [transactions]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('/transactions');\n\n        const fetchedTransactions = response.data.data.map(tr => {\n          return {\n            id: tr._id,\n            date: tr.date ? new Date(tr.date).toLocaleDateString() : '',\n            type: tr.type || '',\n            category: tr.category ? tr.category.toString() : '',\n            comment: tr.comment || '',\n            sum: tr.sum ? tr.sum.toString() : '',\n          };\n        });\n\n        setTransactions(fetchedTransactions);\n      } catch (error) {\n        console.error('Error fetching transactions', error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n\n  useEffect(() => {\n    const { sumPlus, sumMinus, balance } = calculateSums();\n    setSums({ sumPlus, sumMinus, balance });\n  }, [transactions, calculateSums]);\n\n  const getAmountClass = type => {\n    return type === 'Income'\n      ? css.amountPlus\n      : type === 'Expense'\n      ? css.amountMinus\n      : '';\n  };\n\n  const handleSort = column => {\n    const direction =\n      column === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    console.log(transactions);\n\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      let valueA = column === 4 ? parseFloat(a[column]) : a[column];\n      let valueB = column === 4 ? parseFloat(b[column]) : b[column];\n\n      if (column === 0) {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      return direction === 'asc'\n        ? valueA > valueB\n          ? 1\n          : -1\n        : valueA < valueB\n        ? 1\n        : -1;\n    });\n\n    console.log(sortedTransactions);\n\n    setTransactions(sortedTransactions);\n    setSortOrder({ column, direction });\n  };\n\n  const { sumPlus, sumMinus, balance } = calculateSums();\n\n  const handleDelete = async transactionId => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        console.error('No auth token found');\n        return;\n      }\n\n      const response = await axios.delete(\n        `http://localhost:3000/api/transactions/${transactionId}`,\n        {\n          headers: { Authorization: `Bearer ${authToken}` },\n        }\n      );\n\n      if (response.status === 200) {\n        const updatedTransactions = transactions.filter(\n          transaction => transaction.id !== transactionId\n        );\n        setTransactions(updatedTransactions);\n      } else {\n        console.error('Error deleting transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Date</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Type</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Category</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Comment</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Amount</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {transactions.map(transaction => (\n              <tr key={transaction.id}>\n                <td>{transaction.date}</td>\n                <td>{transaction.type}</td>\n                <td>{transaction.category}</td>\n                <td>{transaction.comment}</td>\n                <td className={getAmountClass(transaction.type)}>\n                  {transaction.sum}\n                </td>\n                <td>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                  >\n                    <use href={`${sprite}#icon-pencil2`}></use>\n                  </svg>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                    onClick={() => handleDelete(transaction.id)}\n                  >\n                    <use href={`${sprite}#icon-bin`}></use>\n                  </svg>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p>Balance: {balance.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Home_background__w4mTu\",\"dashboard_container\":\"Home_dashboard_container__E9ETc\",\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__EJwZ+\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__M0U+1\",\"modal__close\":\"ModalAddTransaction_modal__close__UL8+y\",\"modal__title\":\"ModalAddTransaction_modal__title__vLb8S\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__u252m\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__bTA1l\",\"form__checkbox_label_expense\":\"ModalAddTransaction_form__checkbox_label_expense__1hNPD\",\"form__checkbox_label_income\":\"ModalAddTransaction_form__checkbox_label_income__q+3On\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__hOAWz\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__ywj0K\",\"form__slider\":\"ModalAddTransaction_form__slider__7zQRE\",\"form__input\":\"ModalAddTransaction_form__input__D1nMS\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__oIkkH\",\"form__date\":\"ModalAddTransaction_form__date__UI4mE\",\"form__flex_container\":\"ModalAddTransaction_form__flex_container__u8ryW\",\"form__category\":\"ModalAddTransaction_form__category__FJeWT\",\"form__category_active\":\"ModalAddTransaction_form__category_active__szwOH\",\"form__btn_container\":\"ModalAddTransaction_form__btn_container__Z2eGj\",\"error-message\":\"ModalAddTransaction_error-message__VpG-N\"};","import * as Yup from 'yup';\nimport axios from 'axios';\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\n\nimport { Button } from 'components';\nimport css from './ModalAddTransaction.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\nimport sprite from '../../images/icons.svg';\n\nexport const AddTransactionModal = () => {\n  const initialValues = {\n    type: false,\n    sum: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const [categories, setCategories] = useState([]);\n\n  const validationSchema = Yup.object().shape({\n    type: Yup.boolean(),\n    sum: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().when('type', (type, schema) => {\n      return type === false ? schema.required('Category is required') : schema;\n    }),\n    comment: Yup.string(),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  const handleCloseAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (!authToken) {\n          console.error('No auth token found');\n          return;\n        }\n\n        const response = await axios.get(\n          'http://localhost:3000/api/auth/categories',\n          {\n            headers: { Authorization: `Bearer ${authToken}` },\n          }\n        );\n\n        const fetchedCategories = response.data.data;\n        setCategories(fetchedCategories);\n      } catch (error) {\n        console.error('Error fetching categories', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setErrors }\n  ) => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        console.error('No auth token found');\n        return;\n      }\n      console.log(values);\n      const valuesToSend = {\n        sum: values.sum,\n        date: values.date.toISOString().split('T')[0],\n        type: values.type ? 'Income' : 'Expense',\n        ...(values.type === false && { category: values.category }),\n        comment: values.comment,\n      };\n\n      console.log(valuesToSend);\n      const response = await axios.post(\n        'http://localhost:3000/api/transactions',\n        valuesToSend,\n        {\n          headers: { Authorization: `Bearer ${authToken}` },\n        }\n      );\n\n      if (response.status === 201) {\n        console.log('Transaction added successfully!', response.data);\n        resetForm();\n        toast.success('Transaction added successfully!');\n      } else {\n        console.error('Error adding transaction:', response.statusText);\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setErrors(errors);\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({\n              isSubmitting,\n              handleSubmit,\n              setFieldValue,\n              values,\n              setValues,\n              setErrors,\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"type\"\n                      id=\"type\"\n                      onClick={() => {\n                        setValues({\n                          ...initialValues,\n                          type: values.type,\n                        });\n                        setErrors({});\n                      }}\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.type === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  {values.type === false && (\n                    <div className={css.form__input}>\n                      <label>\n                        <Field\n                          as=\"select\"\n                          name=\"category\"\n                          className={`${css.form__category} ${\n                            values.category !== ''\n                              ? css.form__category_active\n                              : null\n                          }`}\n                        >\n                          <option hidden value=\"\">\n                            Select a category\n                          </option>\n                          {categories.map(category => (\n                            <option key={category._id} value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                        </Field>\n                        <ErrorMessage name=\"category\" component=\"div\" />\n                      </label>\n                    </div>\n                  )}\n\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"sum\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"sum\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Add\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    onClick={handleCloseAddTransactionModal}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport css from './ButtonAddTransactions.module.scss';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import { Transactions } from 'components/Transactions/Transactions';\nimport css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { AddTransactionModal } from 'components/ModalAddTransaction/ModalAddTransaction';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Helmet } from 'react-helmet';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <Transactions />\n            <AddTransactionModal />\n          </div>\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","concat","sprite","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","patterns","useSelector","selectPatterns","validationSchema","Yup","shape","name","matches","RegExp","namePattern","pattern","description","required","min","max","email","password","passwordPattern","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","resetForm","signUp","Form","styles","autoComplete","Input","type","placeholder","iconID","Button","theme","onClick","_ref$type","buttonClass","LoginForm","handleSubmit","_ref2","setSubmitting","signIn","unwrap","_x","_x2","Background","Box","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","_objectSpread","touched","Transactions","transactions","setTransactions","_useState3","sumPlus","sumMinus","balance","setSums","_useState5","column","direction","_useState6","sortOrder","setSortOrder","calculateSums","useCallback","forEach","transaction","amount","parseFloat","fetchTransactions","fetchedTransactions","tr","id","date","Date","toLocaleDateString","category","toString","comment","sum","_calculateSums","handleSort","log","sortedTransactions","_toConsumableArray","sort","a","b","valueA","valueB","_calculateSums2","handleDelete","_callee2","transactionId","authToken","updatedTransactions","_context2","localStorage","getItem","abrupt","headers","Authorization","status","filter","title","toFixed","AddTransactionModal","categories","setCategories","typeError","positive","when","schema","isAddTransactionModalOpen","selectIsModalAddTransactionOpen","handleCloseAddTransactionModal","setIsModalAddTransactionOpen","fetchCategories","fetchedCategories","_ref3","setErrors","valuesToSend","errors","toISOString","split","toast","statusText","inner","e","message","finish","_ref4","isSubmitting","setFieldValue","setValues","htmlFor","Field","as","hidden","value","ErrorMessage","component","Datetime","onChange","dateFormat","timeFormat","disabled","ButtonAddTransactions","Helmet","Navigation"],"sourceRoot":""}