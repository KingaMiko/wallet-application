{"version":3,"file":"static/js/46.c37cb00b.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/Transactions/Transactions.module.scss?e1bb","components/Transactions/Transactions.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","components/ModalAddTransaction/ModalAddTransaction.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport css from './CurrencyTable.module.scss';\n\nimport { walletInstance } from 'utils/api';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__72B4n\",\"transactionsTable\":\"Transactions_transactionsTable__klztX\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__UmWQz\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__D0TIz\",\"thName\":\"Transactions_thName__SoSPQ\",\"iconSort\":\"Transactions_iconSort__jQ4-1\",\"sumSection\":\"Transactions_sumSection__QP2mB\",\"iconTransactions\":\"Transactions_iconTransactions__uSrmT\",\"amountPlus\":\"Transactions_amountPlus__xCwMa\",\"amountMinus\":\"Transactions_amountMinus__h36e+\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport css from './Transactions.module.scss';\nimport sprite from 'images/icons.svg';\n\nimport { walletInstance } from 'utils/api';\n\nexport const Transactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [, setSums] = useState({ sumPlus: 0, sumMinus: 0, balance: 0 });\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n\n  const calculateSums = useCallback(() => {\n    let sumPlus = 0;\n    let sumMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === 'Income') {\n        sumPlus += amount;\n      } else if (transaction[1] === 'Expense') {\n        sumMinus += amount;\n      }\n    });\n\n    return { sumPlus, sumMinus, balance: sumPlus - sumMinus };\n  }, [transactions]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await walletInstance.get('/transactions');\n\n        const fetchedTransactions = response.data.data.map(tr => {\n          return {\n            id: tr._id,\n            date: tr.date ? new Date(tr.date).toLocaleDateString() : '',\n            type: tr.type || '',\n            category: tr.category ? tr.category.toString() : '',\n            comment: tr.comment || '',\n            sum: tr.sum ? tr.sum.toString() : '',\n          };\n        });\n\n        setTransactions(fetchedTransactions);\n      } catch (error) {\n        console.error('Error fetching transactions', error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n\n  useEffect(() => {\n    const { sumPlus, sumMinus, balance } = calculateSums();\n    setSums({ sumPlus, sumMinus, balance });\n  }, [transactions, calculateSums]);\n\n  const getAmountClass = type => {\n    return type === 'Income'\n      ? css.amountPlus\n      : type === 'Expense'\n      ? css.amountMinus\n      : '';\n  };\n\n  const handleSort = column => {\n    const direction =\n      column === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    console.log(transactions);\n\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      let valueA = column === 4 ? parseFloat(a[column]) : a[column];\n      let valueB = column === 4 ? parseFloat(b[column]) : b[column];\n\n      if (column === 0) {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      return direction === 'asc'\n        ? valueA > valueB\n          ? 1\n          : -1\n        : valueA < valueB\n        ? 1\n        : -1;\n    });\n\n    console.log(sortedTransactions);\n\n    setTransactions(sortedTransactions);\n    setSortOrder({ column, direction });\n  };\n\n  const { sumPlus, sumMinus, balance } = calculateSums();\n\n  const handleDelete = async transactionId => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        console.error('No auth token found');\n        return;\n      }\n\n      const response = await walletInstance.delete(\n        `http://localhost:3000/api/transactions/${transactionId}`,\n        {\n          headers: { Authorization: `Bearer ${authToken}` },\n        }\n      );\n\n      if (response.status === 200) {\n        const updatedTransactions = transactions.filter(\n          transaction => transaction.id !== transactionId\n        );\n        setTransactions(updatedTransactions);\n      } else {\n        console.error('Error deleting transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Date</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Type</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Category</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Comment</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Amount</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {transactions.map(transaction => (\n              <tr key={transaction.id}>\n                <td>{transaction.date}</td>\n                <td>{transaction.type}</td>\n                <td>{transaction.category}</td>\n                <td>{transaction.comment}</td>\n                <td className={getAmountClass(transaction.type)}>\n                  {transaction.sum}\n                </td>\n                <td>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                  >\n                    <use href={`${sprite}#icon-pencil2`}></use>\n                  </svg>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                    onClick={() => handleDelete(transaction.id)}\n                  >\n                    <use href={`${sprite}#icon-bin`}></use>\n                  </svg>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p>Balance: {balance.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Home_background__w4mTu\",\"dashboard_container\":\"Home_dashboard_container__E9ETc\",\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__EJwZ+\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__M0U+1\",\"modal__close\":\"ModalAddTransaction_modal__close__UL8+y\",\"modal__title\":\"ModalAddTransaction_modal__title__vLb8S\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__u252m\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__bTA1l\",\"form__checkbox_label_expense\":\"ModalAddTransaction_form__checkbox_label_expense__1hNPD\",\"form__checkbox_label_income\":\"ModalAddTransaction_form__checkbox_label_income__q+3On\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__hOAWz\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__ywj0K\",\"form__slider\":\"ModalAddTransaction_form__slider__7zQRE\",\"form__input\":\"ModalAddTransaction_form__input__D1nMS\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__oIkkH\",\"form__date\":\"ModalAddTransaction_form__date__UI4mE\",\"form__flex_container\":\"ModalAddTransaction_form__flex_container__u8ryW\",\"form__category\":\"ModalAddTransaction_form__category__FJeWT\",\"form__category_active\":\"ModalAddTransaction_form__category_active__szwOH\",\"form__btn_container\":\"ModalAddTransaction_form__btn_container__Z2eGj\",\"error-message\":\"ModalAddTransaction_error-message__VpG-N\"};","import * as Yup from 'yup';\nimport axios from 'axios';\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\n\nimport { Button } from 'components';\nimport css from './ModalAddTransaction.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\nimport sprite from '../../images/icons.svg';\n\nexport const AddTransactionModal = () => {\n  const initialValues = {\n    type: false,\n    sum: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const [categories, setCategories] = useState([]);\n\n  const validationSchema = Yup.object().shape({\n    type: Yup.boolean(),\n    sum: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().when('type', (type, schema) => {\n      return type === false ? schema.required('Category is required') : schema;\n    }),\n    comment: Yup.string(),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  const handleCloseAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const authToken = localStorage.getItem('authToken');\n        if (!authToken) {\n          console.error('No auth token found');\n          return;\n        }\n\n        const response = await axios.get(\n          'http://localhost:3000/api/auth/categories',\n          {\n            headers: { Authorization: `Bearer ${authToken}` },\n          }\n        );\n\n        const fetchedCategories = response.data.data;\n        setCategories(fetchedCategories);\n      } catch (error) {\n        console.error('Error fetching categories', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setErrors }\n  ) => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        console.error('No auth token found');\n        return;\n      }\n      console.log(values);\n      const valuesToSend = {\n        sum: values.sum,\n        date: values.date.toISOString().split('T')[0],\n        type: values.type ? 'Income' : 'Expense',\n        ...(values.type === false && { category: values.category }),\n        comment: values.comment,\n      };\n\n      console.log(valuesToSend);\n      const response = await axios.post(\n        'http://localhost:3000/api/transactions',\n        valuesToSend,\n        {\n          headers: { Authorization: `Bearer ${authToken}` },\n        }\n      );\n\n      if (response.status === 201) {\n        console.log('Transaction added successfully!', response.data);\n        resetForm();\n        toast.success('Transaction added successfully!');\n      } else {\n        console.error('Error adding transaction:', response.statusText);\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setErrors(errors);\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({\n              isSubmitting,\n              handleSubmit,\n              setFieldValue,\n              values,\n              setValues,\n              setErrors,\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"type\"\n                      id=\"type\"\n                      onClick={() => {\n                        setValues({\n                          ...initialValues,\n                          type: values.type,\n                        });\n                        setErrors({});\n                      }}\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.type === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  {values.type === false && (\n                    <div className={css.form__input}>\n                      <label>\n                        <Field\n                          as=\"select\"\n                          name=\"category\"\n                          className={`${css.form__category} ${\n                            values.category !== ''\n                              ? css.form__category_active\n                              : null\n                          }`}\n                        >\n                          <option hidden value=\"\">\n                            Select a category\n                          </option>\n                          {categories.map(category => (\n                            <option key={category._id} value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                        </Field>\n                        <ErrorMessage name=\"category\" component=\"div\" />\n                      </label>\n                    </div>\n                  )}\n\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"sum\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"sum\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Add\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    onClick={handleCloseAddTransactionModal}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport css from './ButtonAddTransactions.module.scss';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import { Transactions } from 'components/Transactions/Transactions';\nimport css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { AddTransactionModal } from 'components/ModalAddTransaction/ModalAddTransaction';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Helmet } from 'react-helmet';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <Transactions />\n            <AddTransactionModal />\n          </div>\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","walletInstance","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","concat","sprite","Transactions","transactions","setTransactions","_useState3","sumPlus","sumMinus","balance","setSums","_useState5","column","direction","_useState6","sortOrder","setSortOrder","calculateSums","useCallback","forEach","transaction","amount","parseFloat","fetchTransactions","fetchedTransactions","tr","id","date","Date","toLocaleDateString","type","category","toString","comment","sum","_calculateSums","handleSort","log","sortedTransactions","_toConsumableArray","sort","a","b","valueA","valueB","_calculateSums2","handleDelete","_ref2","_callee2","transactionId","authToken","updatedTransactions","_context2","localStorage","getItem","abrupt","headers","Authorization","status","filter","_x","onClick","title","toFixed","AddTransactionModal","initialValues","categories","setCategories","validationSchema","Yup","shape","typeError","required","positive","when","schema","dispatch","useDispatch","isAddTransactionModalOpen","useSelector","selectIsModalAddTransactionOpen","handleCloseAddTransactionModal","setIsModalAddTransactionOpen","fetchCategories","fetchedCategories","axios","handleSubmit","_ref3","values","setSubmitting","resetForm","setErrors","valuesToSend","errors","_objectSpread","toISOString","split","toast","statusText","inner","e","message","finish","_x2","Formik","onSubmit","_ref4","isSubmitting","setFieldValue","setValues","Form","htmlFor","Field","name","as","hidden","value","ErrorMessage","component","placeholder","Datetime","onChange","dateFormat","timeFormat","Button","theme","disabled","ButtonAddTransactions","Helmet","Navigation"],"sourceRoot":""}