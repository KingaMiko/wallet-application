{"version":3,"file":"static/js/46.c6e2db58.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","components/RegistrationForm/RegistrationForm.jsx","webpack://wallet-application/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://wallet-application/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","webpack://wallet-application/./src/components/Background/Background.module.scss?3c89","components/Background/Background.jsx","webpack://wallet-application/./src/components/Box/Box.module.scss?20ba","components/Box/Box.jsx","webpack://wallet-application/./src/components/Input/Input.module.scss?f352","components/Input/Input.jsx","webpack://wallet-application/./src/components/Transactions/Transactions.module.scss?e1bb","components/Transactions/Transactions.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","components/ModalAddTransaction/ModalAddTransaction.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx","redux/global/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"registration-form\":\"RegistrationForm_registration-form__tvXg0\",\"box\":\"RegistrationForm_box__y2CqE\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUp } from 'redux/session/operations';\nimport { selectPatterns } from 'redux/global/selectors';\n\nimport styles from './RegistrationForm.module.scss';\nimport { Button, Input } from 'components';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const patterns = useSelector(selectPatterns);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const namePattern = patterns?.namePattern?.pattern\n    ? new RegExp(patterns.namePattern.pattern)\n    : null;\n\n  const passwordPattern = patterns?.passwordPattern?.pattern\n    ? new RegExp(patterns.passwordPattern.pattern)\n    : null;\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .matches(\n        namePattern,\n        patterns?.namePattern?.description || 'Invalid name format'\n      )\n      .required('Name is required')\n      .min(3, 'Name should be at least 3 characters')\n      .max(20, 'Name should be at most 20 characters'),\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        patterns?.passwordPattern?.description || 'Invalid password format'\n      )\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Confirm password is required'),\n  });\n\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\n    dispatch(\n      signUp({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['registration-form']} autoComplete=\"off\">\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name\"\n              iconID=\"icon-baseline-account_box\"\n            />\n\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Register\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/login')}\n            >\n              Log in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"button-white\":\"Button_button-white__8-Y8O\",\"button-color\":\"Button_button-color__qDUYL\"};","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  children,\n  type = 'button',\n  theme,\n  className,\n  onClick,\n}) => {\n  const buttonClass =\n    theme === 'color'\n      ? styles['button-color']\n      : theme === 'white'\n      ? styles['button-white']\n      : '';\n\n  return (\n    <button\n      className={`${styles.Button} ${buttonClass} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  theme: PropTypes.oneOf(['color', 'white']),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"login-form\":\"LoginForm_login-form__o6Oo+\"};","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signIn } from 'redux/session/operations';\nimport { selectPatterns } from 'redux/global/selectors';\n\nimport styles from './LoginForm.module.scss';\nimport { Button, Input } from 'components';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const patterns = useSelector(selectPatterns);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const passwordPattern = patterns?.passwordPattern?.pattern\n    ? new RegExp(patterns.passwordPattern.pattern)\n    : null;\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .matches(\n        passwordPattern,\n        patterns?.passwordPattern?.description || 'Invalid password format'\n      )\n\n      .required('Password is required')\n      .min(6, 'Password should be at least 6 characters')\n      .max(20, 'Password should be at most 20 characters'),\n  });\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      const resultAction = await dispatch(\n        signIn({\n          email: values.email,\n          password: values.password,\n        })\n      ).unwrap();\n\n      const token = resultAction.token;\n      localStorage.setItem('authToken', token);\n\n      resetForm();\n      navigate('/home');\n    } catch (error) {\n      console.error('Błąd logowania:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {() => (\n          <Form className={styles['login-form']} autoComplete=\"off\">\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              iconID=\"icon-baseline-email\"\n            />\n\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              iconID=\"icon-baseline-lock\"\n            />\n\n            <Button type=\"submit\" theme=\"color\">\n              Log in\n            </Button>\n\n            <Button\n              type=\"button\"\n              theme=\"white\"\n              onClick={() => navigate('/register')}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__syS0M\"};","import styles from './Background.module.scss';\n\nexport const Background = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Box_box__YJIlx\"};","import PropTypes from 'prop-types';\n\nimport styles from './Box.module.scss';\n\nexport const Box = ({ children, className }) => {\n  return <div className={`${styles['box']} ${className}`}>{children}</div>;\n};\n\nBox.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Input_box__8gunV\",\"form-input\":\"Input_form-input__IGnal\",\"error-message\":\"Input_error-message__98oTL\"};","import PropTypes from 'prop-types';\n\nimport { useField } from 'formik';\n\nimport sprite from 'images/icons.svg';\nimport styles from './Input.module.scss';\n\nexport const Input = ({ iconID, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={styles['box']}>\n      <input className={styles['form-input']} {...field} {...props} />\n\n      <svg width=\"20px\" height=\"20px\">\n        <use href={`${sprite}#${iconID}`}></use>\n      </svg>\n\n      {meta.touched && meta.error ? (\n        <div className={styles['error-message']}>{meta.error}</div>\n      ) : null}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  autoComplete: PropTypes.string,\n  iconID: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__72B4n\",\"transactionsTable\":\"Transactions_transactionsTable__klztX\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__UmWQz\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__D0TIz\",\"thName\":\"Transactions_thName__SoSPQ\",\"iconSort\":\"Transactions_iconSort__jQ4-1\",\"sumSection\":\"Transactions_sumSection__QP2mB\",\"iconTransactions\":\"Transactions_iconTransactions__uSrmT\",\"amountPlus\":\"Transactions_amountPlus__xCwMa\",\"amountMinus\":\"Transactions_amountMinus__h36e+\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport css from './Transactions.module.scss';\nimport sprite from 'images/icons.svg';\nimport axios from 'axios';\n\nexport const Transactions = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [, setSums] = useState({ sumPlus: 0, sumMinus: 0, balance: 0 });\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n\n  const calculateSums = useCallback(() => {\n    let sumPlus = 0;\n    let sumMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === 'Income') {\n        sumPlus += amount;\n      } else if (transaction[1] === 'Expense') {\n        sumMinus += amount;\n      }\n    });\n\n    return { sumPlus, sumMinus, balance: sumPlus - sumMinus };\n  }, [transactions]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('/transactions');\n\n        const fetchedTransactions = response.data.data.map(tr => {\n          return {\n            id: tr._id,\n            date: tr.date ? new Date(tr.date).toLocaleDateString() : '',\n            type: tr.type || '',\n            category: tr.category ? tr.category.toString() : '',\n            comment: tr.comment || '',\n            sum: tr.sum ? tr.sum.toString() : '',\n          };\n        });\n\n        setTransactions(fetchedTransactions);\n      } catch (error) {\n        console.error('Error fetching transactions', error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n\n  useEffect(() => {\n    const { sumPlus, sumMinus, balance } = calculateSums();\n    setSums({ sumPlus, sumMinus, balance });\n  }, [transactions, calculateSums]);\n\n  const getAmountClass = type => {\n    return type === 'Income'\n      ? css.amountPlus\n      : type === 'Expense'\n      ? css.amountMinus\n      : '';\n  };\n\n  const handleSort = column => {\n    const direction =\n      column === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    console.log(transactions);\n\n    const sortedTransactions = [...transactions].sort((a, b) => {\n      let valueA = column === 4 ? parseFloat(a[column]) : a[column];\n      let valueB = column === 4 ? parseFloat(b[column]) : b[column];\n\n      if (column === 0) {\n        valueA = new Date(valueA);\n        valueB = new Date(valueB);\n      }\n\n      return direction === 'asc'\n        ? valueA > valueB\n          ? 1\n          : -1\n        : valueA < valueB\n        ? 1\n        : -1;\n    });\n\n    console.log(sortedTransactions);\n\n    setTransactions(sortedTransactions);\n    setSortOrder({ column, direction });\n  };\n\n  const { sumPlus, sumMinus, balance } = calculateSums();\n\n  const handleDelete = async transactionId => {\n    try {\n      const authToken = localStorage.getItem('authToken');\n      if (!authToken) {\n        console.error('No auth token found');\n        return;\n      }\n\n      const response = await axios.delete(\n        `http://localhost:3000/api/transactions/${transactionId}`,\n        {\n          headers: { Authorization: `Bearer ${authToken}` },\n        }\n      );\n\n      if (response.status === 200) {\n        const updatedTransactions = transactions.filter(\n          transaction => transaction.id !== transactionId\n        );\n        setTransactions(updatedTransactions);\n      } else {\n        console.error('Error deleting transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Date</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Type</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Category</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Comment</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Amount</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {transactions.map(transaction => (\n              <tr key={transaction.id}>\n                <td>{transaction.date}</td>\n                <td>{transaction.type}</td>\n                <td>{transaction.category}</td>\n                <td>{transaction.comment}</td>\n                <td className={getAmountClass(transaction.type)}>\n                  {transaction.sum}\n                </td>\n                <td>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                  >\n                    <use href={`${sprite}#icon-pencil2`}></use>\n                  </svg>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                    onClick={() => handleDelete(transaction.id)}\n                  >\n                    <use href={`${sprite}#icon-bin`}></use>\n                  </svg>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p>Balance: {balance.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Home_background__w4mTu\",\"dashboard_container\":\"Home_dashboard_container__E9ETc\",\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__EJwZ+\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__M0U+1\",\"modal__close\":\"ModalAddTransaction_modal__close__UL8+y\",\"modal__title\":\"ModalAddTransaction_modal__title__vLb8S\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__u252m\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__bTA1l\",\"form__checkbox_label_expense\":\"ModalAddTransaction_form__checkbox_label_expense__1hNPD\",\"form__checkbox_label_income\":\"ModalAddTransaction_form__checkbox_label_income__q+3On\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__hOAWz\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__ywj0K\",\"form__slider\":\"ModalAddTransaction_form__slider__7zQRE\",\"form__input\":\"ModalAddTransaction_form__input__D1nMS\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__oIkkH\",\"form__date\":\"ModalAddTransaction_form__date__UI4mE\",\"form__flex_container\":\"ModalAddTransaction_form__flex_container__u8ryW\",\"form__category\":\"ModalAddTransaction_form__category__FJeWT\",\"form__category_active\":\"ModalAddTransaction_form__category_active__szwOH\",\"form__btn_container\":\"ModalAddTransaction_form__btn_container__Z2eGj\"};","import React from 'react';\nimport * as Yup from 'yup';\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\n\nimport { Button } from 'components';\nimport css from './ModalAddTransaction.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\nimport sprite from '../../images/icons.svg';\n\nexport const AddTransactionModal = () => {\n  const initialValues = {\n    transactionType: false,\n    amount: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    amount: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().required('Category is required'),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  const handleCloseAddTransactionModal = () => {\n    console.log('Closing AddTransactionModal');\n\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setErrors }\n  ) => {\n    try {\n      console.log('Form values:', values); // Trzeba zmienić na dodanie transakcji w API\n      resetForm();\n      toast.success('Transaction added successfully!');\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setErrors(errors);\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({ isSubmitting, handleSubmit, setFieldValue, values }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"transactionType\"\n                      className={`${css.form__checkbox_label} ${\n                        values.transactionType === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"transactionType\"\n                      id=\"transactionType\"\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.transactionType === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"transactionType\"\n                      className={`${css.form__checkbox_label} ${\n                        values.transactionType === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  {values.transactionType === false && (\n                    <div className={css.form__input}>\n                      <label>\n                        <Field\n                          as=\"select\"\n                          name=\"category\"\n                          className={`${css.form__category} ${\n                            values.category !== ''\n                              ? css.form__category_active\n                              : null\n                          }`}\n                        >\n                          <option hidden value=\"\">\n                            Select a category\n                          </option>\n                          <option value=\"category1\">Main expenses</option>\n                          <option value=\"category2\">Products</option>\n                          <option value=\"category3\">Car</option>\n                          <option value=\"category4\">Self care</option>\n                          <option value=\"category5\">Child care</option>\n                          <option value=\"category6\">Household products</option>\n                          <option value=\"category7\">Education</option>\n                          <option value=\"category8\">Leisure</option>\n                        </Field>\n                        <ErrorMessage name=\"category\" component=\"div\" />\n                      </label>\n                    </div>\n                  )}\n\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"amount\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"amount\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Add\n                  </Button>\n\n                  <Button type=\"button\" theme=\"white\">\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport css from './ButtonAddTransactions.module.scss';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import { Transactions } from 'components/Transactions/Transactions';\nimport css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { AddTransactionModal } from 'components/ModalAddTransaction/ModalAddTransaction';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Helmet } from 'react-helmet';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <Transactions />\n            <AddTransactionModal />\n          </div>\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","export const selectIsLoading = state => state.global.isLoading;\nexport const selectIsModalLogoutOpen = state => state.global.isModalLogoutOpen;\nexport const selectIsModalAddTransactionOpen = state =>\n  state.global.isModalAddTransactionOpen;\nexport const selectIsModalEditTransactionOpen = state =>\n  state.global.isModalEditTransactionOpen;\nexport const selectPatterns = state => state.global.patterns;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","concat","sprite","RegistrationForm","_patterns$namePattern","_patterns$passwordPat","_patterns$namePattern2","_patterns$passwordPat2","dispatch","useDispatch","navigate","useNavigate","patterns","useSelector","selectPatterns","namePattern","pattern","RegExp","passwordPattern","validationSchema","Yup","shape","name","matches","description","required","min","max","email","password","confirmPassword","oneOf","_Fragment","Formik","initialValues","onSubmit","values","setSubmitting","resetForm","signUp","Form","styles","autoComplete","Input","type","placeholder","iconID","Button","theme","onClick","_ref$type","buttonClass","LoginForm","handleSubmit","_ref2","resultAction","token","signIn","unwrap","localStorage","setItem","finish","_x","_x2","Background","Box","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","_objectSpread","touched","Transactions","transactions","setTransactions","_useState3","sumPlus","sumMinus","balance","setSums","_useState5","column","direction","_useState6","sortOrder","setSortOrder","calculateSums","useCallback","forEach","transaction","amount","parseFloat","fetchTransactions","fetchedTransactions","tr","id","date","Date","toLocaleDateString","category","toString","comment","sum","_calculateSums","handleSort","log","sortedTransactions","_toConsumableArray","sort","a","b","valueA","valueB","_calculateSums2","handleDelete","_callee2","transactionId","authToken","updatedTransactions","_context2","getItem","abrupt","headers","Authorization","status","filter","title","toFixed","AddTransactionModal","transactionType","typeError","positive","isAddTransactionModalOpen","selectIsModalAddTransactionOpen","setErrors","errors","toast","inner","e","message","setIsModalAddTransactionOpen","_ref3","isSubmitting","setFieldValue","htmlFor","Field","as","hidden","value","ErrorMessage","component","Datetime","onChange","dateFormat","timeFormat","disabled","ButtonAddTransactions","Helmet","Navigation","state","global","isModalAddTransactionOpen"],"sourceRoot":""}