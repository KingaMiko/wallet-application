{"version":3,"file":"static/js/736.022d8542.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/pages/Home/Home.module.scss?ce6f","webpack://wallet-application/./src/components/TransactionsManager/Transactions/Transactions.module.scss?167d","components/TransactionsManager/Transactions/Transactions.jsx","webpack://wallet-application/./src/components/TransactionsManager/ModalAddTransaction/ModalAddTransaction.module.scss?a3a7","components/TransactionsManager/ModalAddTransaction/ModalAddTransaction.jsx","components/TransactionsManager/TransactionManager.jsx","webpack://wallet-application/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import css from './Balance.module.scss';\n\nexport const Balance = () => {\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN 0.00</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\",\"currencyTableHead\":\"CurrencyTable_currencyTableHead__0L-k0\"};","import React, { useState, useEffect } from 'react';\nimport css from './CurrencyTable.module.scss';\n\nimport { walletInstance } from 'utils/api';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Home_background__w4mTu\",\"dashboard_container\":\"Home_dashboard_container__E9ETc\",\"container\":\"Home_container__qRlyu\",\"sidebar\":\"Home_sidebar__74EFX\",\"main\":\"Home_main__4+rG5\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"Transactions_tableBg__zIQxE\",\"transactionsTable\":\"Transactions_transactionsTable__83vc7\",\"transactionsTableHead\":\"Transactions_transactionsTableHead__8+gku\",\"transactionsTablebody\":\"Transactions_transactionsTablebody__5CQS8\",\"thName\":\"Transactions_thName__3q6MS\",\"iconSort\":\"Transactions_iconSort__6FlXB\",\"sumSection\":\"Transactions_sumSection__rkTQ1\",\"iconTransactions\":\"Transactions_iconTransactions__lZpcx\",\"amountPlus\":\"Transactions_amountPlus__gFaHt\",\"amountMinus\":\"Transactions_amountMinus__4FyfO\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport css from './Transactions.module.scss';\nimport sprite from 'images/icons.svg';\n\nimport { walletInstance } from 'utils/api';\n\nexport const Transactions = ({ transactions, deleteTransaction }) => {\n  const [, setSums] = useState({ sumPlus: 0, sumMinus: 0, balance: 0 });\n  const [sortOrder, setSortOrder] = useState({\n    column: null,\n    direction: 'asc',\n  });\n\n  const calculateSums = useCallback(() => {\n    let sumPlus = 0;\n    let sumMinus = 0;\n\n    transactions.forEach(transaction => {\n      const amount = parseFloat(transaction[4]);\n      if (transaction[1] === 'Income') {\n        sumPlus += amount;\n      } else if (transaction[1] === 'Expense') {\n        sumMinus += amount;\n      }\n    });\n\n    return { sumPlus, sumMinus, balance: sumPlus - sumMinus };\n  }, [transactions]);\n\n  useEffect(() => {\n    const { sumPlus, sumMinus, balance } = calculateSums();\n    setSums({ sumPlus, sumMinus, balance });\n  }, [transactions, calculateSums]);\n\n  const getAmountClass = type => {\n    return type === 'Income'\n      ? css.amountPlus\n      : type === 'Expense'\n      ? css.amountMinus\n      : '';\n  };\n\n  const handleSort = sortColumn => {\n    const direction =\n      sortColumn === sortOrder.column && sortOrder.direction === 'asc'\n        ? 'desc'\n        : 'asc';\n    setSortOrder({ column: sortColumn, direction });\n  };\n\n  const sortedTransactions = [...transactions].sort((a, b) => {\n    let valueA, valueB;\n    if (sortOrder.column === 4) {\n      valueA = parseFloat(a.sum);\n      valueB = parseFloat(b.sum);\n    } else if (sortOrder.column === 0) {\n      valueA = new Date(a.date);\n      valueB = new Date(b.date);\n    } else {\n      valueA = a[sortOrder.column];\n      valueB = b[sortOrder.column];\n    }\n\n    return sortOrder.direction === 'asc'\n      ? valueA > valueB\n        ? 1\n        : -1\n      : valueA < valueB\n      ? 1\n      : -1;\n  });\n\n  const { sumPlus, sumMinus, balance } = calculateSums();\n\n  const handleDelete = async transactionId => {\n    try {\n      const response = await walletInstance.delete(\n        `/transactions/${transactionId}`\n      );\n      if (response.status === 200) {\n        deleteTransaction(transactionId);\n      } else {\n        console.error('Error deleting transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction', error);\n    }\n  };\n\n  return (\n    <div>\n      <div className={css.tableBg}>\n        <table className={css.transactionsTable}>\n          <thead className={css.transactionsTableHead}>\n            <tr>\n              <th onClick={() => handleSort(0)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Date</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(1)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Type</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(2)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Category</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(3)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Comment</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th onClick={() => handleSort(4)} title=\"Sort\">\n                <div className={css.thName}>\n                  <span>Amount</span>\n                  <svg className={css.iconSort} width=\"20px\" height=\"20px\">\n                    <use href={`${sprite}#icon-sort`}></use>\n                  </svg>\n                </div>\n              </th>\n              <th>Options</th>\n            </tr>\n          </thead>\n          <tbody className={css.transactionsTableBody}>\n            {sortedTransactions.map((transaction, index) => (\n              <tr key={index}>\n                <td>{transaction.date}</td>\n                <td>{transaction.type}</td>\n                <td>{transaction.category}</td>\n                <td>{transaction.comment}</td>\n                <td className={getAmountClass(transaction.type)}>\n                  {transaction.sum}\n                </td>\n                <td>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                  >\n                    <use href={`${sprite}#icon-pencil2`}></use>\n                  </svg>\n                  <svg\n                    className={css.iconTransactions}\n                    width=\"20px\"\n                    height=\"20px\"\n                    onClick={() => handleDelete(transaction.id)}\n                  >\n                    <use href={`${sprite}#icon-bin`}></use>\n                  </svg>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className={css.sumSection}>\n        <p>Incomes: {sumPlus.toFixed(2)}</p>\n        <p>Expenses: {sumMinus.toFixed(2)}</p>\n        <p>Balance: {balance.toFixed(2)}</p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalAddTransaction_modal__92Wan\",\"modal__overlay\":\"ModalAddTransaction_modal__overlay__5muZL\",\"modal__close\":\"ModalAddTransaction_modal__close__2oFKS\",\"modal__title\":\"ModalAddTransaction_modal__title__lkrl8\",\"form__checkbox_container\":\"ModalAddTransaction_form__checkbox_container__Ewtgx\",\"form__checkbox_label\":\"ModalAddTransaction_form__checkbox_label__fP5ud\",\"form__checkbox_label_expense\":\"ModalAddTransaction_form__checkbox_label_expense__Pkkrh\",\"form__checkbox_label_income\":\"ModalAddTransaction_form__checkbox_label_income__1jimB\",\"form__checkbox_input\":\"ModalAddTransaction_form__checkbox_input__mqlbb\",\"form__checkbox_custom\":\"ModalAddTransaction_form__checkbox_custom__TZ4ho\",\"form__slider\":\"ModalAddTransaction_form__slider__UGKmj\",\"form__input\":\"ModalAddTransaction_form__input__mcnWJ\",\"form__input_flex\":\"ModalAddTransaction_form__input_flex__JnydG\",\"form__date\":\"ModalAddTransaction_form__date__7R5ye\",\"form__flex_container\":\"ModalAddTransaction_form__flex_container__agrkZ\",\"form__category\":\"ModalAddTransaction_form__category__9vIwc\",\"form__category_active\":\"ModalAddTransaction_form__category_active__eIpA1\",\"form__btn_container\":\"ModalAddTransaction_form__btn_container__Lecm6\",\"error-message\":\"ModalAddTransaction_error-message__XGrbE\"};","import * as Yup from 'yup';\n\nimport Datetime from 'react-datetime';\nimport { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport { walletInstance } from 'utils/api';\n\nimport { Button } from 'components';\nimport css from './ModalAddTransaction.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\nimport { selectIsModalAddTransactionOpen } from 'redux/global/selectors';\nimport sprite from '../../../images/icons.svg';\n\nexport const AddTransactionModal = ({ addTransaction }) => {\n  const initialValues = {\n    type: false,\n    sum: '',\n    category: '',\n    date: new Date(),\n    comment: '',\n  };\n\n  const [categories, setCategories] = useState([]);\n\n  const validationSchema = Yup.object().shape({\n    type: Yup.string(),\n    sum: Yup.number()\n      .typeError('Amount must be a number')\n      .required('Amount is required')\n      .positive('Amount must be a positive number'),\n    date: Yup.date().required('Date is required'),\n    category: Yup.string().when('type', (type, schema) => {\n      return type === false ? schema.required('Category is required') : schema;\n    }),\n    comment: Yup.string(),\n  });\n\n  const dispatch = useDispatch();\n  const isAddTransactionModalOpen = useSelector(\n    selectIsModalAddTransactionOpen\n  );\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await walletInstance.get('/categories');\n\n        const fetchedCategories = response.data.data;\n        setCategories(fetchedCategories);\n      } catch (error) {\n        console.error('Error fetching categories', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  const handleCloseAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(false));\n  };\n\n  const handleSubmit = async (\n    values,\n    { setSubmitting, resetForm, setErrors }\n  ) => {\n    try {\n      const valuesToSend = {\n        sum: values.sum,\n        date: values.date.toISOString().split('T')[0],\n        type: values.type ? 'Income' : 'Expense',\n        ...(values.type === false && { category: values.category }),\n        comment: values.comment,\n      };\n\n      const response = await walletInstance.post('/transactions', valuesToSend);\n\n      if (response.status === 201) {\n        console.log('Transaction added successfully!', response.data);\n        addTransaction(response.data);\n        handleCloseAddTransactionModal();\n        resetForm();\n        toast.success('Transaction added successfully!');\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n      if (error instanceof Yup.ValidationError) {\n        const errors = {};\n        error.inner.forEach(e => {\n          errors[e.path] = e.message;\n        });\n        setErrors(errors);\n      } else {\n        toast.error('Error adding transaction. Please try again.');\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return isAddTransactionModalOpen ? (\n    <div className={css.modal__overlay}>\n      <div className={css.modal}>\n        <div>\n          <h5 className={css.modal__title}>Add Transaction</h5>\n          <button\n            type=\"button\"\n            className={css.modal__close}\n            onClick={handleCloseAddTransactionModal}\n          >\n            <svg width=\"16px\" height=\"16px\">\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        </div>\n        <div>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={validationSchema}\n          >\n            {({\n              isSubmitting,\n              handleSubmit,\n              setFieldValue,\n              values,\n              setValues,\n              setErrors,\n            }) => (\n              <Form onSubmit={handleSubmit}>\n                <div className={css.form__checkbox_container}>\n                  <label className={css.form__checkbox_label}>\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === true\n                          ? css.form__checkbox_label_income\n                          : null\n                      }`}\n                    >\n                      Income\n                    </span>\n\n                    <Field\n                      type=\"checkbox\"\n                      name=\"type\"\n                      id=\"type\"\n                      onClick={() => {\n                        setValues({\n                          ...initialValues,\n                          type: values.type,\n                        });\n                        setErrors({});\n                      }}\n                      className={css.form__checkbox_input}\n                    />\n                    <div className={css.form__checkbox_custom}>\n                      <div className={css.form__slider}>\n                        {values.type === false ? '-' : '+'}\n                      </div>\n                    </div>\n\n                    <span\n                      htmlFor=\"type\"\n                      className={`${css.form__checkbox_label} ${\n                        values.type === false\n                          ? css.form__checkbox_label_expense\n                          : null\n                      }`}\n                    >\n                      Expense\n                    </span>\n                  </label>\n                </div>\n                <div className={css.form__flex_container}>\n                  {values.type === false && (\n                    <div className={css.form__input}>\n                      <label>\n                        <Field\n                          as=\"select\"\n                          name=\"category\"\n                          className={`${css.form__category} ${\n                            values.category !== ''\n                              ? css.form__category_active\n                              : null\n                          }`}\n                        >\n                          <option hidden value=\"\">\n                            Select a category\n                          </option>\n                          {categories.map(category => (\n                            <option key={category._id} value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                        </Field>\n                        <ErrorMessage name=\"category\" component=\"div\" />\n                      </label>\n                    </div>\n                  )}\n\n                  <div className={css.form__input_flex}>\n                    <label>\n                      <Field\n                        type=\"number\"\n                        name=\"sum\"\n                        placeholder=\"0.00\"\n                        className={css.form__input}\n                      />\n                      <ErrorMessage name=\"sum\" component=\"div\" />\n                    </label>\n                    <label>\n                      <Datetime\n                        value={values.date}\n                        onChange={date => setFieldValue('date', date)}\n                        className={`${css.form__input} ${css.form__date}`}\n                        dateFormat=\"YYYY-MM-DD\"\n                        timeFormat={false}\n                      />\n                      <span className={css.form__date_icon}></span>\n                      <ErrorMessage name=\"date\" component=\"div\" />\n                    </label>\n                  </div>\n                  <div className={css.form__input}>\n                    <label>\n                      <Field\n                        as=\"input\"\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder=\"Comment\"\n                        className={css.form__input}\n                      />\n                    </label>\n                  </div>\n                </div>\n                <div className={css.form__btn_container}>\n                  <Button type=\"submit\" theme=\"color\" disabled={isSubmitting}>\n                    Add\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"white\"\n                    onClick={handleCloseAddTransactionModal}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Transactions } from './Transactions/Transactions';\nimport { AddTransactionModal } from './ModalAddTransaction/ModalAddTransaction';\nimport { walletInstance } from 'utils/api';\n\nexport const TransactionsManager = () => {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await walletInstance.get('/transactions');\n      const fetchedTransactions = response.data.data.map(tr => ({\n        id: tr._id,\n        date: tr.date ? new Date(tr.date).toLocaleDateString() : '',\n        type: tr.type || '',\n        category: tr.category ? tr.category.toString() : '',\n        comment: tr.comment || '',\n        sum: tr.sum ? tr.sum.toString() : '',\n      }));\n      setTransactions(fetchedTransactions);\n    } catch (error) {\n      console.error('Error fetching transactions', error);\n    }\n  };\n\n  const addTransaction = newTransaction => {\n    setTransactions(prevTransactions => [\n      ...prevTransactions,\n      {\n        ...newTransaction,\n        id: newTransaction._id,\n      },\n    ]);\n    fetchTransactions();\n  };\n\n  const deleteTransaction = transactionId => {\n    setTransactions(prevTransactions =>\n      prevTransactions.filter(transaction => transaction.id !== transactionId)\n    );\n  };\n\n  return (\n    <div>\n      <AddTransactionModal addTransaction={addTransaction} />\n      <Transactions\n        transactions={transactions}\n        deleteTransaction={deleteTransaction}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"add_transaction_btn\":\"ButtonAddTransactions_add_transaction_btn__DAp3y\"};","import { useDispatch } from 'react-redux';\nimport css from './ButtonAddTransactions.module.scss';\nimport { setIsModalAddTransactionOpen } from 'redux/global/globalSlice';\n\nexport const ButtonAddTransactions = () => {\n  const dispatch = useDispatch();\n  const handleOpenAddTransactionModal = () => {\n    dispatch(setIsModalAddTransactionOpen(true));\n  };\n  return (\n    <button\n      onClick={handleOpenAddTransactionModal}\n      className={css.add_transaction_btn}\n    >\n      +\n    </button>\n  );\n};\n","import css from './Home.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { TransactionsManager } from 'components/TransactionsManager/TransactionManager';\n//import React, { useState } from 'react';\nimport React from 'react';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { Helmet } from 'react-helmet';\n\nconst Home = () => {\n  //const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            {/* <p>Add your first transaction</p> */}\n            <TransactionsManager />\n          </div>\n        </div>\n        <ButtonAddTransactions />\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Balance","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","walletInstance","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","concat","sprite","Transactions","transactions","deleteTransaction","sumPlus","sumMinus","balance","setSums","_useState3","column","direction","_useState4","sortOrder","setSortOrder","calculateSums","useCallback","forEach","transaction","amount","parseFloat","_calculateSums","handleSort","sortColumn","sortedTransactions","_toConsumableArray","sort","a","b","valueA","valueB","sum","Date","date","_calculateSums2","handleDelete","_ref2","transactionId","status","_x","onClick","title","index","type","category","comment","id","toFixed","AddTransactionModal","addTransaction","initialValues","categories","setCategories","validationSchema","Yup","shape","typeError","required","positive","when","schema","dispatch","useDispatch","isAddTransactionModalOpen","useSelector","selectIsModalAddTransactionOpen","fetchCategories","fetchedCategories","handleCloseAddTransactionModal","setIsModalAddTransactionOpen","handleSubmit","_ref4","_callee2","values","_ref3","setSubmitting","resetForm","setErrors","valuesToSend","errors","_context2","_objectSpread","toISOString","split","log","toast","inner","e","message","finish","_x2","Formik","onSubmit","_ref5","isSubmitting","setFieldValue","setValues","Form","htmlFor","Field","name","as","hidden","value","ErrorMessage","component","placeholder","Datetime","onChange","dateFormat","timeFormat","Button","theme","disabled","TransactionsManager","setTransactions","fetchTransactions","fetchedTransactions","tr","toLocaleDateString","toString","newTransaction","prevTransactions","filter","ButtonAddTransactions","Helmet","Navigation"],"sourceRoot":""}