{"version":3,"file":"static/js/786.4b44baa0.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/Stats/Stats.module.scss?4742","components/Stats/Yearly/Doughnut.jsx","components/Stats/Yearly/Bar.jsx","components/Stats/Yearly/Yearly.jsx","components/Stats/Monthly/Expenses.jsx","components/Stats/Monthly/Incomes.jsx","components/Stats/Monthly/Monthly.jsx","components/Stats/Stats.jsx","webpack://wallet-application/./src/pages/Statistics/Statistics.module.scss?6c4b","pages/Statistics/Statistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport css from './Balance.module.scss';\nimport { selectUserDetails } from 'redux/session/selectors';\nimport { getUserDetails } from 'redux/session/operations';\n\nexport const Balance = () => {\n  const dispatch = useDispatch();\n  const userDetails = useSelector(selectUserDetails);\n  const userBalance = userDetails ? userDetails.balance : 0;\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch]);\n\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN {userBalance}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\"};","import React, { useState, useEffect } from 'react';\nimport css from './CurrencyTable.module.scss';\n\nimport { walletInstance } from 'utils/api';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n\n  const linkClass = isActive ? css.active : css.link;\n\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"statsContainer\":\"Stats_statsContainer__0UttW\",\"chartsYearly\":\"Stats_chartsYearly__wG7lC\",\"insideChartDoughnut\":\"Stats_insideChartDoughnut__3U66R\",\"insideChartBar\":\"Stats_insideChartBar__fSmWm\",\"chartsMonthly\":\"Stats_chartsMonthly__NWRK9\",\"selections\":\"Stats_selections__7iAXc\",\"selectors\":\"Stats_selectors__S6SvL\",\"layoutMonthly\":\"Stats_layoutMonthly__ARNXQ\"};","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useEffect, useState } from 'react';\n\nimport css from '../Stats.module.scss';\nimport { walletInstance } from 'utils/api';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const DoughnutChart = ({ selectedYear }) => {\n  const [statisticsData, setStatisticsData] = useState({\n    expenses: 0,\n    incomes: 0,\n  });\n\n  useEffect(() => {\n    const fetchStatistics = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n          },\n        });\n\n        const { expanses, income } = response.data.data;\n        setStatisticsData({ expenses: expanses, incomes: income });\n      } catch (error) {\n        console.error('There was a problem fetching statistics:', error);\n      }\n    };\n\n    fetchStatistics();\n  }, [selectedYear]);\n\n  const data = {\n    labels: ['Expenses', 'Incomes'],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [statisticsData.expenses, statisticsData.incomes],\n        backgroundColor: ['#24CCA7', '#6E78E8'],\n        hoverBackgroundColor: ['#1aab8c', '#4A56E2'],\n        borderColor: ['#24CCA7', '#6E78E8'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in total',\n      },\n    },\n  };\n\n  return (\n    <div className={css.insideChartDoughnut}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nimport css from '../Stats.module.scss';\nimport { walletInstance } from 'utils/api';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const BarChart = ({ selectedYear }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n          },\n        });\n\n        const data = response.data.data;\n\n        const months = Array.from({ length: 12 }, (_, i) => i + 1);\n\n        const expensesData = months.map(\n          month => data.eachMonthStats['Expense'][month] || 0\n        );\n        const incomesData = months.map(\n          month => data.eachMonthStats['Income'][month] || 0\n        );\n\n        const formattedData = {\n          labels: months.map(month =>\n            new Date(selectedYear, month - 1).toLocaleString('en-US', {\n              month: 'long',\n            })\n          ),\n          datasets: [\n            {\n              label: 'Expenses',\n              data: expensesData,\n              backgroundColor: '#24CCA7',\n            },\n            {\n              label: 'Incomes',\n              data: incomesData,\n              backgroundColor: '#6E78E8',\n            },\n          ],\n        };\n\n        setChartData(formattedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics for the year',\n      },\n    },\n  };\n\n  return (\n    <div className={css.insideChartBar}>\n      {chartData ? <Bar options={options} data={chartData} /> : 'Loading...'}\n    </div>\n  );\n};\n","import css from '../Stats.module.scss';\nimport React from 'react';\nimport { DoughnutChart } from './Doughnut';\nimport { BarChart } from './Bar';\n\nexport const Yearly = ({ selectedYear }) => {\n  return (\n    <div className={css.chartsYearly}>\n      <DoughnutChart selectedYear={selectedYear} />\n      <BarChart selectedYear={selectedYear} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const Expenses = () => {\n  const data = {\n    labels: [\n      'Main expenses',\n      'Products',\n      'Car',\n      'Self care',\n      'Child care',\n      'Household products',\n      'Education',\n      'Leisure',\n    ],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [2500, 1500, 500, 600, 200, 350, 150, 120],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        hoverBackgroundColor: [\n          '#FF425B',\n          '#2680E4',\n          '#FFAC2D',\n          '#35A8A8',\n          '#7F48FF',\n          '#FF7845',\n          '#FFC52E',\n          '#227547',\n          '#FF4F33',\n          '#7837B5',\n        ],\n        borderColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n      title: {\n        display: true,\n        text: 'Expenses in categories',\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '420px', height: '420px' }}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const Incomes = () => {\n  const data = {\n    labels: ['Main job', 'Dance classes', 'English lessons', 'Painting'],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [5000, 500, 300, 600],\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        hoverBackgroundColor: [\n          '#FF425B',\n          '#2680E4',\n          '#FFAC2D',\n          '#35A8A8',\n          '#7F48FF',\n          '#FF7845',\n          '#FFC52E',\n          '#227547',\n          '#FF4F33',\n          '#7837B5',\n        ],\n        borderColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n      title: {\n        display: true,\n        text: 'Incomes in categories',\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '400px', height: '400px' }}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import css from '../Stats.module.scss';\nimport React, { useState } from 'react';\nimport { Expenses } from './Expenses';\nimport { Incomes } from './Incomes';\nimport Select from 'react-select';\nimport { Button } from 'components';\n\nexport const Monthly = ({ selectedYear, selectedMonth, handleResetMonth }) => {\n  const [selectedType, setSelectedType] = useState({\n    value: 'Expenses',\n    label: 'Expenses',\n  });\n\n  const typeOptions = [\n    { value: 'Expenses', label: 'Expenses' },\n    { value: 'Incomes', label: 'Incomes' },\n  ];\n\n  const handleTypeChange = selectedOption => {\n    setSelectedType(selectedOption);\n  };\n\n  return (\n    <div className={css.layoutMonthly}>\n      <div>\n        Transactions Type\n        <Select\n          options={typeOptions}\n          value={selectedType}\n          onChange={handleTypeChange}\n        />\n      </div>\n      <div className={css.chartsMonthly}>\n        {selectedType.value === 'Expenses' && (\n          <Expenses selectedYear={selectedYear} selectedMonth={selectedMonth} />\n        )}\n        {selectedType.value === 'Incomes' && (\n          <Incomes selectedYear={selectedYear} selectedMonth={selectedMonth} />\n        )}\n      </div>\n      <Button type=\"button\" theme=\"color\" onClick={handleResetMonth}>\n        Go back to Total\n      </Button>\n    </div>\n  );\n};\n","import css from './Stats.module.scss';\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\n\nimport { Yearly } from './Yearly/Yearly';\nimport { Monthly } from './Monthly/Monthly';\n\nexport const Stats = () => {\n  const [selectedYear, setSelectedYear] = useState({\n    value: 2023,\n    label: 2023,\n  });\n  const [selectedMonth, setSelectedMonth] = useState(null);\n\n  const handleYearChange = selectedOption => {\n    setSelectedYear(selectedOption);\n  };\n\n  const handleMonthChange = selectedOption => {\n    setSelectedMonth(selectedOption);\n  };\n\n  const handleResetMonth = () => {\n    setSelectedMonth(null);\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const year = today.getFullYear();\n    setSelectedYear({ value: year, label: year });\n  }, [setSelectedYear]);\n\n  const yearOptions = [\n    { value: 2020, label: 2020 },\n    { value: 2021, label: 2021 },\n    { value: 2022, label: 2022 },\n    { value: 2023, label: 2023 },\n  ];\n\n  const monthOptions = [\n    { value: '1', label: 'January' },\n    { value: '2', label: 'February' },\n    { value: '3', label: 'March' },\n    { value: '4', label: 'April' },\n    { value: '5', label: 'May' },\n    { value: '6', label: 'June' },\n    { value: '7', label: 'July' },\n    { value: '8', label: 'August' },\n    { value: '9', label: 'September' },\n    { value: '10', label: 'October' },\n    { value: '11', label: 'November' },\n    { value: '12', label: 'December' },\n  ];\n\n  return (\n    <div className={css.statsContainer}>\n      <div className={css.selections}>\n        <div className={css.selectors}>\n          Year\n          <div>\n            <Select\n              options={yearOptions}\n              value={selectedYear}\n              onChange={handleYearChange}\n            />\n          </div>\n        </div>\n        <div className={css.selectors}>\n          Month\n          <div>\n            <Select\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n            />\n          </div>\n        </div>\n      </div>\n      {selectedMonth ? (\n        <Monthly\n          selectedYear={selectedYear.value}\n          selectedMonth={selectedMonth.value}\n          handleResetMonth={handleResetMonth}\n        />\n      ) : (\n        <Yearly selectedYear={selectedYear.value} />\n      )}\n    </div>\n  );\n};\n\nexport default Stats;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Statistics_background__0M0Jv\",\"dashboard_container\":\"Statistics_dashboard_container__nrfSw\",\"container\":\"Statistics_container__88ahX\",\"sidebar\":\"Statistics_sidebar__Qylm+\",\"main\":\"Statistics_main__LSNEX\"};","import { Stats } from 'components/Stats/Stats';\nimport css from './Statistics.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { Helmet } from 'react-helmet';\n\nconst Statistics = () => {\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Statistics</title>\n      </Helmet>\n      <section className={css.dashboard_container}>\n        <div className={css.container}>\n          <div className={css.sidebar}>\n            <Navigation />\n            <Balance />\n            <CurrencyTable />\n          </div>\n          <div className={css.main}>\n            <Stats />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"names":["Balance","dispatch","useDispatch","userDetails","useSelector","selectUserDetails","userBalance","balance","useEffect","getUserDetails","_jsxs","className","css","children","_jsx","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","walletInstance","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","to","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","NavLink","ActiveNavLink","width","height","href","concat","sprite","ChartJS","ArcElement","Tooltip","Legend","DoughnutChart","selectedYear","expenses","incomes","statisticsData","setStatisticsData","fetchStatistics","_ref2","_response$data$data","expanses","income","params","year","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","Doughnut","options","plugins","legend","position","title","display","text","CategoryScale","LinearScale","BarElement","Title","BarChart","chartData","setChartData","months","expensesData","incomesData","formattedData","Array","from","length","_","i","month","eachMonthStats","Date","toLocaleString","Bar","responsive","Yearly","Expenses","style","Incomes","Monthly","selectedMonth","handleResetMonth","value","selectedType","setSelectedType","Select","onChange","selectedOption","Button","type","theme","onClick","Stats","setSelectedYear","_useState3","_useState4","setSelectedMonth","getFullYear","Helmet","Navigation"],"sourceRoot":""}