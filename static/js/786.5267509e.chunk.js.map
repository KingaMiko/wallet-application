{"version":3,"file":"static/js/786.5267509e.chunk.js","mappings":"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","sources":["webpack://wallet-application/./src/components/ActiveNavLink/ActiveNavLink.module.scss?c0df","components/ActiveNavLink/ActiveNavLink.jsx","webpack://wallet-application/./src/components/Background/BackgroundBlurred.module.scss?c710","components/Background/BackgroundBlurred.jsx","webpack://wallet-application/./src/components/Balance/Balance.module.scss?bde2","components/Balance/Balance.jsx","webpack://wallet-application/./src/components/CurrencyTable/CurrencyTable.module.scss?daa9","components/CurrencyTable/CurrencyTable.jsx","webpack://wallet-application/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://wallet-application/./src/components/Navigation/NavigationMobile.module.scss?4239","components/Navigation/NavigationMobile.jsx","webpack://wallet-application/./src/components/Stats/Stats.module.scss?4742","components/Stats/Yearly/Doughnut.jsx","components/Stats/Yearly/Bar.jsx","components/Stats/Yearly/Yearly.jsx","components/Stats/Monthly/Expenses.jsx","components/Stats/Monthly/Incomes.jsx","components/Stats/Monthly/Monthly.jsx","components/Stats/Stats.jsx","webpack://wallet-application/./src/pages/Statistics/Statistics.module.scss?6c4b","pages/Statistics/Statistics.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ActiveNavLink_link__Srke3\",\"active\":\"ActiveNavLink_active__uzCgI\"};","import React from 'react';\n\nimport { NavLink, useMatch, useResolvedPath } from 'react-router-dom';\n\nimport css from './ActiveNavLink.module.scss';\n\nconst ActiveNavLink = ({ to, children }) => {\n  const resolvedPath = useResolvedPath(to);\n  const isActive = useMatch({ path: resolvedPath.pathname, end: true });\n  const linkClass = isActive ? css.active : css.link;\n  return (\n    <NavLink to={to} className={linkClass}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport default ActiveNavLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"BackgroundBlurred_background__i2tYL\"};","import styles from './BackgroundBlurred.module.scss';\n\nexport const BackgroundBlurred = () => {\n  return <div className={styles.background}></div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__tUx3D\",\"title\":\"Balance_title__aUwwk\",\"amount\":\"Balance_amount__t4xet\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectUserDetails } from 'redux/session/selectors';\nimport { getUserDetails } from 'redux/session/operations';\n\nimport css from './Balance.module.scss';\n\nexport const Balance = () => {\n  const dispatch = useDispatch();\n  const userDetails = useSelector(selectUserDetails);\n  const userBalance = userDetails ? userDetails.balance : 0;\n\n  useEffect(() => {\n    dispatch(getUserDetails());\n  }, [dispatch, userDetails]);\n\n  return (\n    <div className={css.balance}>\n      <p className={css.title}>YOUR BALANCE</p>\n      <p className={css.amount}>PLN {userBalance}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBg\":\"CurrencyTable_tableBg__nplZ5\",\"currencyTable\":\"CurrencyTable_currencyTable__1iH+4\"};","import React, { useState, useEffect } from 'react';\nimport { walletInstance } from 'utils/api';\n\nimport css from './CurrencyTable.module.scss';\n\nexport const CurrencyTable = () => {\n  const [currencies, setCurrencies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/currencies');\n\n        setCurrencies(response.data.data.currencies);\n      } catch (error) {\n        console.error('Error fetching currencies', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className={css.tableBg}>\n      <table className={css.currencyTable}>\n        <thead className={css.currencyTableHead}>\n          <tr>\n            <th>Currency</th>\n            <th>Purchase</th>\n            <th>Sell</th>\n          </tr>\n        </thead>\n        <tbody className={css.currencyTableBody}>\n          {currencies.map(currency => (\n            <tr key={currency._id}>\n              <td>{currency.code}</td>\n              <td>{currency.bid}</td>\n              <td>{currency.ask}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"Navigation_icon__lPT0N\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\n\nimport css from './Navigation.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n            Home\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n            Statistics\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"navigation\":\"NavigationMobile_navigation__mkvLU\"};","import React from 'react';\nimport ActiveNavLink from '../ActiveNavLink/ActiveNavLink';\n\nimport css from './NavigationMobile.module.scss';\nimport sprite from 'images/icons.svg';\n\nconst NavigationMobile = () => {\n  return (\n    <nav>\n      <ul className={css.navigation}>\n        <li>\n          <ActiveNavLink to=\"/home\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-home3`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/statistics\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-timeline`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n        <li>\n          <ActiveNavLink to=\"/currency\">\n            <svg className={css.icon} width=\"38px\" height=\"38px\">\n              <use href={`${sprite}#icon-baseline-dollar`}></use>\n            </svg>\n          </ActiveNavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavigationMobile;\n","// extracted by mini-css-extract-plugin\nexport default {\"statsContainer\":\"Stats_statsContainer__0UttW\",\"chartsYearly\":\"Stats_chartsYearly__wG7lC\",\"insideChartDoughnut\":\"Stats_insideChartDoughnut__3U66R\",\"insideChartBar\":\"Stats_insideChartBar__fSmWm\",\"chartsMonthly\":\"Stats_chartsMonthly__NWRK9\",\"selections\":\"Stats_selections__7iAXc\",\"selectors\":\"Stats_selectors__S6SvL\",\"layoutMonthly\":\"Stats_layoutMonthly__ARNXQ\",\"chartStyle\":\"Stats_chartStyle__Bsg+e\",\"tableBg\":\"Stats_tableBg__4NK0I\",\"categoryTable\":\"Stats_categoryTable__ty7GV\",\"categoryTableHead\":\"Stats_categoryTableHead__9VuTi\",\"legendColor\":\"Stats_legendColor__ADNY+\"};","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { walletInstance } from 'utils/api';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport css from '../Stats.module.scss';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const DoughnutChart = ({ selectedYear }) => {\n  const [statisticsData, setStatisticsData] = useState({\n    expenses: 0,\n    incomes: 0,\n  });\n\n  useEffect(() => {\n    const fetchStatistics = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n          },\n        });\n\n        const { expenses, income } = response.data.data;\n        setStatisticsData({ expenses: expenses, incomes: income });\n      } catch (error) {\n        console.error('There was a problem fetching statistics:', error);\n      }\n    };\n\n    fetchStatistics();\n  }, [selectedYear]);\n\n  const data = {\n    labels: ['Expenses', 'Incomes'],\n    datasets: [\n      {\n        label: 'Amount',\n        data: [statisticsData.expenses, statisticsData.incomes],\n        backgroundColor: ['#24CCA7', '#6E78E8'],\n        hoverBackgroundColor: ['#1aab8c', '#4A56E2'],\n        borderColor: ['#24CCA7', '#6E78E8'],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n      },\n      title: {\n        display: true,\n        text: 'Statistics in total',\n      },\n    },\n  };\n\n  return (\n    <div className={css.insideChartDoughnut}>\n      <Doughnut options={options} data={data} />\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { walletInstance } from 'utils/api';\n\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nimport css from '../Stats.module.scss';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const BarChart = ({ selectedYear }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n          },\n        });\n\n        const data = response.data.data;\n\n        const months = Array.from({ length: 12 }, (_, i) => i + 1);\n\n        const expensesData = months.map(\n          month => data.eachMonthStats['Expense'][month] || 0\n        );\n        const incomesData = months.map(\n          month => data.eachMonthStats['Income'][month] || 0\n        );\n\n        const formattedData = {\n          labels: months.map(month =>\n            new Date(selectedYear, month - 1).toLocaleString('en-US', {\n              month: 'long',\n            })\n          ),\n          datasets: [\n            {\n              label: 'Expenses',\n              data: expensesData,\n              backgroundColor: '#24CCA7',\n            },\n            {\n              label: 'Incomes',\n              data: incomesData,\n              backgroundColor: '#6E78E8',\n            },\n          ],\n        };\n\n        setChartData(formattedData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Statistics for the year',\n      },\n    },\n  };\n\n  return (\n    <div className={css.insideChartBar}>\n      {chartData ? <Bar options={options} data={chartData} /> : 'Loading...'}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { DoughnutChart } from './Doughnut';\nimport { BarChart } from './Bar';\nimport { useMediaQuery } from 'react-responsive';\n\nimport css from '../Stats.module.scss';\n\nexport const Yearly = ({ selectedYear }) => {\n  const isMobileView = useMediaQuery({ maxWidth: 767 });\n\n  return (\n    <div className={css.chartsYearly}>\n      <DoughnutChart selectedYear={selectedYear} />\n      {!isMobileView && <BarChart selectedYear={selectedYear} />}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { walletInstance } from 'utils/api';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport css from '../Stats.module.scss';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const Expenses = ({ selectedYear, selectedMonth }) => {\n  const [categoryData, setCategoryData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n            type: 'Expense',\n            month: selectedMonth,\n          },\n        });\n\n        const { categoriesStats } = response.data.data;\n\n        const filteredCategories = categoriesStats.filter(\n          item => item.total !== 0\n        );\n\n        const groupedCategories = filteredCategories.reduce((acc, item) => {\n          const existingCategory = acc.find(\n            category => category.category === item.category\n          );\n          if (existingCategory) {\n            existingCategory.total += item.total;\n          } else {\n            acc.push({ category: item.category, total: item.total });\n          }\n\n          return acc;\n        }, []);\n\n        setCategoryData(groupedCategories);\n      } catch (error) {\n        console.error('There was a problem fetching the expense data:', error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear, selectedMonth]);\n\n  const chartData = {\n    labels: categoryData.map(item => item.category),\n    datasets: [\n      {\n        label: 'Amount',\n        data: categoryData.map(item => item.total),\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        hoverBackgroundColor: [\n          '#FF425B',\n          '#2680E4',\n          '#FFAC2D',\n          '#35A8A8',\n          '#7F48FF',\n          '#FF7845',\n          '#FFC52E',\n          '#227547',\n          '#FF4F33',\n          '#7837B5',\n        ],\n        borderColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n        display: false,\n      },\n      title: {\n        display: true,\n        text: 'Expenses in categories',\n      },\n    },\n  };\n\n  return (\n    <div>\n      {categoryData.length > 0 &&\n      categoryData.every(item => item.total === 0) ? (\n        <p>No statistics for this month</p>\n      ) : (\n        <div className={css.chartStyle}>\n          <div>\n            <Doughnut options={options} data={chartData} />\n          </div>\n          <div className={css.tableBg}>\n            <table className={css.categoryTable}>\n              <thead className={css.categoryTableHead}>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categoryData.map(({ category, total }, index) => (\n                  <tr key={category}>\n                    <td>\n                      <div\n                        style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                        }}\n                      >\n                        <div\n                          className={css.legendColor}\n                          style={{\n                            backgroundColor:\n                              chartData.datasets[0].backgroundColor[index],\n                          }}\n                        ></div>\n                        {category}\n                      </div>\n                    </td>\n                    <td>{total}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { walletInstance } from 'utils/api';\n\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport css from '../Stats.module.scss';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const Incomes = ({ selectedYear, selectedMonth }) => {\n  const [categoryData, setCategoryData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await walletInstance.get('/statistics', {\n          params: {\n            year: selectedYear,\n            type: 'Income',\n            month: selectedMonth,\n          },\n        });\n\n        const { categoriesStats } = response.data.data;\n\n        const filteredCategories = categoriesStats.filter(\n          item => item.total !== 0\n        );\n\n        const groupedCategories = filteredCategories.reduce((acc, item) => {\n          const existingCategory = acc.find(\n            category => category.category === item.category\n          );\n          if (existingCategory) {\n            existingCategory.total += item.total;\n          } else {\n            acc.push({ category: item.category, total: item.total });\n          }\n\n          return acc;\n        }, []);\n\n        setCategoryData(groupedCategories);\n      } catch (error) {\n        console.error('There was a problem fetching the income data:', error);\n      }\n    };\n\n    fetchData();\n  }, [selectedYear, selectedMonth]);\n\n  const chartData = {\n    labels: categoryData.map(item => item.category),\n    datasets: [\n      {\n        label: 'Amount',\n        data: categoryData.map(item => item.total),\n        backgroundColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        hoverBackgroundColor: [\n          '#FF425B',\n          '#2680E4',\n          '#FFAC2D',\n          '#35A8A8',\n          '#7F48FF',\n          '#FF7845',\n          '#FFC52E',\n          '#227547',\n          '#FF4F33',\n          '#7837B5',\n        ],\n        borderColor: [\n          '#FF6384',\n          '#36A2EB',\n          '#FFCE56',\n          '#4BC0C0',\n          '#9966FF',\n          '#FF9F40',\n          '#FFD700',\n          '#2E8B57',\n          '#FF6347',\n          '#8A2BE2',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        position: 'bottom',\n        display: false,\n      },\n      title: {\n        display: true,\n        text: 'Incomes in categories',\n      },\n    },\n  };\n\n  return (\n    <div>\n      {categoryData.length > 0 &&\n      categoryData.every(item => item.total === 0) ? (\n        <p>No statistics for this month</p>\n      ) : (\n        <div className={css.chartStyle}>\n          <div>\n            <Doughnut options={options} data={chartData} />\n          </div>\n          <div className={css.tableBg}>\n            <table className={css.categoryTable}>\n              <thead className={css.categoryTableHead}>\n                <tr>\n                  <th>Category</th>\n                  <th>Amount</th>\n                </tr>\n              </thead>\n              <tbody>\n                {categoryData.map(({ category, total }, index) => (\n                  <tr key={category}>\n                    <td>\n                      <div\n                        style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                        }}\n                      >\n                        <div\n                          className={css.legendColor}\n                          style={{\n                            backgroundColor:\n                              chartData.datasets[0].backgroundColor[index],\n                          }}\n                        ></div>\n                        {category}\n                      </div>\n                    </td>\n                    <td>{total}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport Select from 'react-select';\n\nimport { Expenses } from './Expenses';\nimport { Incomes } from './Incomes';\nimport { Button } from 'components';\n\nimport css from '../Stats.module.scss';\n\nexport const Monthly = ({ selectedYear, selectedMonth, handleResetMonth }) => {\n  const [selectedType, setSelectedType] = useState({\n    value: 'Expenses',\n    label: 'Expenses',\n  });\n\n  const typeOptions = [\n    { value: 'Expenses', label: 'Expenses' },\n    { value: 'Incomes', label: 'Incomes' },\n  ];\n\n  const handleTypeChange = selectedOption => {\n    setSelectedType(selectedOption);\n  };\n\n  return (\n    <div className={css.layoutMonthly}>\n      <div>\n        Transactions Type\n        <Select\n          options={typeOptions}\n          value={selectedType}\n          onChange={handleTypeChange}\n        />\n      </div>\n      <div className={css.chartsMonthly}>\n        {selectedType.value === 'Expenses' && (\n          <Expenses selectedYear={selectedYear} selectedMonth={selectedMonth} />\n        )}\n        {selectedType.value === 'Incomes' && (\n          <Incomes selectedYear={selectedYear} selectedMonth={selectedMonth} />\n        )}\n      </div>\n      <Button type=\"button\" theme=\"color\" onClick={handleResetMonth}>\n        Go back to Total\n      </Button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { Yearly } from './Yearly/Yearly';\nimport { Monthly } from './Monthly/Monthly';\n\nimport css from './Stats.module.scss';\n\nexport const Stats = () => {\n  const [selectedYear, setSelectedYear] = useState({\n    value: 2023,\n    label: 2023,\n  });\n  const [selectedMonth, setSelectedMonth] = useState(null);\n\n  const handleYearChange = selectedOption => {\n    setSelectedYear(selectedOption);\n  };\n\n  const handleMonthChange = selectedOption => {\n    setSelectedMonth(selectedOption);\n  };\n\n  const handleResetMonth = () => {\n    setSelectedMonth(null);\n  };\n\n  useEffect(() => {\n    const today = new Date();\n    const year = today.getFullYear();\n    setSelectedYear({ value: year, label: year });\n  }, [setSelectedYear]);\n\n  const yearOptions = [\n    { value: 2020, label: 2020 },\n    { value: 2021, label: 2021 },\n    { value: 2022, label: 2022 },\n    { value: 2023, label: 2023 },\n  ];\n\n  const monthOptions = [\n    { value: '1', label: 'January' },\n    { value: '2', label: 'February' },\n    { value: '3', label: 'March' },\n    { value: '4', label: 'April' },\n    { value: '5', label: 'May' },\n    { value: '6', label: 'June' },\n    { value: '7', label: 'July' },\n    { value: '8', label: 'August' },\n    { value: '9', label: 'September' },\n    { value: '10', label: 'October' },\n    { value: '11', label: 'November' },\n    { value: '12', label: 'December' },\n  ];\n\n  return (\n    <div className={css.statsContainer}>\n      <div className={css.selections}>\n        <div className={css.selectors}>\n          Year\n          <div>\n            <Select\n              options={yearOptions}\n              value={selectedYear}\n              onChange={handleYearChange}\n            />\n          </div>\n        </div>\n        <div className={css.selectors}>\n          Month\n          <div>\n            <Select\n              options={monthOptions}\n              value={selectedMonth}\n              onChange={handleMonthChange}\n            />\n          </div>\n        </div>\n      </div>\n      {selectedMonth ? (\n        <Monthly\n          selectedYear={selectedYear.value}\n          selectedMonth={selectedMonth.value}\n          handleResetMonth={handleResetMonth}\n        />\n      ) : (\n        <Yearly selectedYear={selectedYear.value} />\n      )}\n    </div>\n  );\n};\n\nexport default Stats;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Statistics_wrapper__swRb+\",\"mainMobile\":\"Statistics_mainMobile__3i3o7\",\"mainTabletAndDesktop\":\"Statistics_mainTabletAndDesktop__Ju0hE\",\"sidebar\":\"Statistics_sidebar__Qylm+\",\"main\":\"Statistics_main__LSNEX\"};","import { Stats } from 'components/Stats/Stats';\nimport css from './Statistics.module.scss';\nimport { CurrencyTable } from 'components/CurrencyTable/CurrencyTable';\nimport { Balance } from 'components/Balance/Balance';\nimport Navigation from 'components/Navigation/Navigation';\nimport { Helmet } from 'react-helmet';\nimport { useMediaQuery } from 'react-responsive';\nimport NavigationMobile from 'components/Navigation/NavigationMobile';\nimport { BackgroundBlurred } from 'components/Background/BackgroundBlurred';\n\nconst Statistics = () => {\n  const isMobileView = useMediaQuery({ maxWidth: 767 });\n\n  return (\n    <div className={css.background}>\n      <Helmet>\n        <title>Statistics</title>\n      </Helmet>\n      <section>\n        <BackgroundBlurred />\n        <div className={css.wrapper}>\n          {isMobileView ? (\n            <div className={css.mainMobile}>\n              <NavigationMobile />\n              <Stats />\n            </div>\n          ) : (\n            <div className={css.mainTabletAndDesktop}>\n              <div className={css.sidebar}>\n                <div>\n                  <Navigation />\n                  <Balance />\n                </div>\n                <div>\n                  <CurrencyTable />\n                </div>\n              </div>\n              <div className={css.main}>\n                <Stats />\n              </div>\n            </div>\n          )}{' '}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"names":["_ref","to","children","resolvedPath","useResolvedPath","linkClass","useMatch","path","pathname","end","css","_jsx","NavLink","className","BackgroundBlurred","styles","Balance","dispatch","useDispatch","userDetails","useSelector","selectUserDetails","userBalance","balance","useEffect","getUserDetails","_jsxs","CurrencyTable","_useState","useState","_useState2","_slicedToArray","currencies","setCurrencies","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","walletInstance","sent","data","t0","console","error","stop","apply","arguments","map","currency","code","bid","ask","_id","ActiveNavLink","width","height","href","concat","sprite","ChartJS","ArcElement","Tooltip","Legend","DoughnutChart","selectedYear","expenses","incomes","statisticsData","setStatisticsData","fetchStatistics","_ref2","_response$data$data","income","params","year","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","Doughnut","options","plugins","legend","position","title","display","text","CategoryScale","LinearScale","BarElement","Title","BarChart","chartData","setChartData","months","expensesData","incomesData","formattedData","Array","from","length","_","i","month","eachMonthStats","Date","toLocaleString","Bar","responsive","Yearly","isMobileView","useMediaQuery","maxWidth","Expenses","selectedMonth","categoryData","setCategoryData","categoriesStats","filteredCategories","groupedCategories","type","filter","item","total","reduce","acc","existingCategory","find","category","push","every","_ref3","index","style","alignItems","Incomes","Monthly","handleResetMonth","value","selectedType","setSelectedType","Select","onChange","selectedOption","Button","theme","onClick","Stats","setSelectedYear","_useState3","_useState4","setSelectedMonth","getFullYear","Helmet","NavigationMobile","Navigation"],"sourceRoot":""}